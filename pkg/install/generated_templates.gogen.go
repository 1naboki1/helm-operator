// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-helm-operator-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-operator-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 948,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x39\x6f\xdc\x30\x10\x85\x7b\xfe\x8a\x01\x5c\x38\x09\x2c\x05\xee\x02\x75\xb6\x8b\x14\x09\x52\x28\x47\x13\xa4\x18\x92\x4f\x59\xc6\x5c\x8e\x30\x24\x37\x87\xb0\xff\x3d\x90\xb4\x06\xbc\x8e\xed\x34\xdb\x8d\xe6\xd2\x9b\xc7\xaf\x69\x1a\x73\x46\x9f\x36\xa0\x0c\xdd\x05\x07\x62\xe7\xa4\xa6\x72\x41\x2e\xd6\x5c\xa0\xa4\x12\x91\x2f\x88\x93\x3f\x4a\x91\x0d\xc9\x87\xf4\x9d\x58\x61\xce\x48\x52\xfc\x4d\x09\xf0\xf0\x34\x88\xd2\xbb\x6a\xa1\x09\x05\x99\x7e\x86\xb2\x59\x46\x1a\xcb\x19\x7e\xfe\x03\x72\x26\x27\xa9\xa8\x44\x7a\xd1\x5f\x5f\xdd\xbc\x6c\x0d\x8f\xe1\x0b\x34\x07\x49\x1d\xed\x2e\xcd\x6d\x48\xbe\xa3\x8f\xab\xaa\xab\x55\x94\xd9\xa2\xb0\xe7\xc2\x9d\x21\x8a\x6c\x11\xf3\x1c\x11\x25\xde\xa2\xa3\x21\xd6\x5f\xcd\x06\x71\xdb\xc8\x08\xe5\x22\x6a\x9e\x2e\x4d\x13\x85\x81\xda\x0f\xbc\x45\x1e\xd9\x81\xf6\xfb\x43\xf7\xf2\xd9\xd1\x34\x1d\x57\xa7\x89\x90\xfc\x7e\x6f\x66\xcf\xee\x8b\x55\xcb\xae\xe5\x5a\x36\xa2\xe1\x0f\x97\x20\xa9\xbd\x7d\x93\xdb\x20\xaf\x77\x97\x16\x85\xef\x6e\xb9\x59\xdd\xeb\x25\xe2\x94\x87\x18\xad\x11\xcb\x78\x43\x3c\x86\xb7\x2a\x75\xcc\x1d\x7d\x3d\x7f\x75\xfe\x6d\xd9\xa9\xc8\x52\xd5\xe1\x28\xb9\x83\xda\x7b\x89\x86\x92\xa4\xfe\xd0\xf8\xb9\x7f\xff\x74\xef\x09\xae\xbf\x5e\xc9\x39\xad\x09\x12\xd1\x63\x98\x17\xdc\x99\xf0\x8c\x36\x43\xf4\xef\x9b\x3c\xb3\x3d\x57\xfb\x03\xae\x1c\x5c\x7e\x14\xcd\xff\x08\x7f\x88\xd6\x43\xf6\x1e\xa3\x2d\xe6\x39\xf2\x18\xb8\xc6\xb2\xe2\x37\x53\xfa\x37\x00\x00\xff\xff\xad\xec\xff\x2b\xb4\x03\x00\x00"),
		},
		"/flux-helm-release-crd.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-release-crd.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 7426,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6f\xdb\x38\x12\x7f\xf7\xa7\x98\xcb\x1d\x90\xe4\x10\xab\x2d\x7a\x38\xdc\x19\x28\xda\xa2\x41\xaf\xbd\xf4\x4f\x90\x34\x7d\x09\xba\xc0\x58\x1a\x49\xdc\x50\xa4\x76\x48\x3a\xf1\x2e\xf6\xbb\x2f\x48\xfd\xb1\xa5\xc8\xb2\xdd\xa6\x0f\x8b\xae\x5e\x5a\x93\x9c\xe1\x6f\x66\x7e\x33\x43\x32\xd3\xe9\x74\x82\xa5\xf8\x4c\x6c\x84\x56\x33\xc0\x52\xd0\x9d\x25\xe5\x7f\x99\xe8\xe6\x3f\x26\x12\xfa\xd1\xe2\xc9\x9c\x2c\x3e\x99\xdc\x08\x95\xcc\xe0\x95\x33\x56\x17\x17\x64\xb4\xe3\x98\x4e\x29\x15\x4a\x58\xa1\xd5\xa4\x20\x8b\x09\x5a\x9c\x4d\x00\x14\x16\x34\x83\x9c\x64\xc1\x24\x09\x0d\x99\xc8\xff\x88\x52\xe9\xee\xe2\x24\x12\x7a\x62\x4a\x8a\xfd\xca\x8c\xb5\x2b\xab\xa5\x6b\xb3\x95\x06\xe3\x17\x00\x54\xfb\xbe\x21\x59\x5c\x54\xca\xc2\xa8\x14\xc6\x9e\xf5\x67\xde\x09\x63\xc3\x6c\x29\x1d\xa3\xec\x42\x08\x13\x26\xd7\x6c\x3f\xac\x94\x4f\x21\xe7\x09\x80\x89\x75\x49\x33\x08\x13\x25\xc6\x94\x4c\x00\x30\x49\x82\x65\x28\xcf\x59\x28\x4b\xfc\x4a\x4b\x57\xa8\x56\xf0\xff\x97\x1f\x3f\x9c\xa3\xcd\x67\x10\x19\x8b\xd6\x99\xa8\xde\xc9\x6b\x09\x6b\x1a\x47\xac\xe3\x06\xb0\x4b\xbf\x95\xb1\x2c\x54\xb6\x4d\xd5\x65\xf8\xd5\x51\xd6\x19\xda\x49\x57\xac\x55\x65\x89\xb9\x7e\x7e\xf4\x22\xf2\x32\xcf\x9e\x1d\xd4\xa0\x92\x83\xe3\x2f\x51\x41\xc6\x60\xd6\x05\xfd\xbe\x33\x36\xbe\x51\x13\xfb\x28\x66\x42\xbf\xd3\x27\x51\x90\xb1\x58\x94\x1d\x95\x2f\x7b\xea\x12\xb4\x7e\xc0\xb8\x39\xd7\x7c\xaa\x9d\x5b\x01\x9f\xc1\x6f\xbf\x4f\x00\x16\x0d\x3b\x17\x4f\x56\xbf\xda\x28\x54\x9a\xc3\x54\x90\x24\x5e\x50\x32\x03\xcb\xae\xd9\xcb\x58\xcd\x98\x51\x3b\xb6\x40\x29\x92\x80\xb2\xd2\xa1\x4b\x52\x2f\xcf\xdf\x7e\x7e\x7a\x19\xe7\x54\xe0\xac\x16\x2b\x59\x97\xc4\x56\x34\x98\x82\xaa\x9a\xb5\xcd\xc7\xf4\x8b\x13\xec\xf7\xbb\x3e\x8c\x73\x64\x7b\xf8\x65\x6d\x76\x48\x43\x25\xd5\xd2\xa4\x3b\x01\x90\x90\x89\x59\x94\x01\x1c\x7c\xca\x29\x90\xbb\x11\x08\xb6\x46\xf0\x36\x05\xa5\x2d\x18\x57\x96\x52\x50\x72\x02\xc2\xc2\xad\x90\x12\xe6\x04\x19\x29\x62\xb4\x94\xc0\x7c\x09\x98\xa6\xe2\x4e\xa8\x0c\x6c\x4e\xbd\x7d\xea\x04\xf3\x54\x07\xab\xfd\x02\x68\x42\x50\xed\xd2\x5b\x7f\x2f\xfc\x6b\x56\xa2\xb5\xc4\x6a\x06\x07\x3f\x5d\xe3\xf4\xd7\xc7\xd3\xff\x7e\x39\xba\x9e\xd6\xff\xfb\x67\x33\x74\xfc\xfc\x1f\x07\x1d\x41\x8b\x9c\x91\x6d\x13\x6e\x7f\x47\x04\xb1\x01\x6f\x78\x5b\x56\xc6\x35\x8e\xf1\xa3\x66\x95\x97\xab\x0f\xcd\x7d\xeb\x2b\xd5\xdf\xdf\x05\xa2\x20\xed\xec\xa8\xe9\xc1\x6c\xa1\x8c\x45\x29\x41\x33\xb8\x32\x63\x4c\xa8\x91\x05\xa1\xc0\x90\x4f\x70\x33\x08\xd7\xd7\xad\x8c\xb8\x37\x97\x6a\x2e\xd0\x86\xd9\x7f\xff\xab\x47\x4d\x43\xf6\x33\x4a\xd7\xe7\x6c\x0f\xd6\xdb\xb4\xf5\x78\xe5\xe2\x20\xe8\x53\xcb\x91\x01\xad\x42\xe1\x6d\xc0\x0e\x22\x9b\x6b\x2d\x09\xd5\xa4\x87\x2b\xa6\xab\x4a\x68\xbf\xed\x83\x64\xe5\xac\xd6\x43\x39\x6b\x97\xe5\x90\x90\x24\x4b\x8f\x98\x42\x6d\xda\x1d\x0c\x6b\x29\xe7\x18\xdf\xf4\x81\x54\x12\x7a\xfe\x33\xc5\xb6\xcf\x83\x0d\x09\xef\x3f\x52\x38\x97\xf7\xac\x1a\xb4\x8c\xec\x49\x65\x55\x49\xec\x43\xd5\x42\x31\xde\x4e\xb0\xb9\x30\x6d\x26\x68\xd5\x1a\x9c\xa2\x90\x8e\xa9\x4f\x84\x71\x2b\x5b\xb7\xef\x87\xac\xf2\x77\x9b\x34\xae\xf4\xa5\x7c\x93\xcb\x41\xa4\xa0\x88\x92\xd0\x55\xf7\x83\xd6\xa8\x18\x42\x37\x2e\x99\x08\xe3\x1d\xfe\x46\xeb\x9b\x81\x68\x8c\x7a\x9d\x69\x41\xca\x42\xee\x45\x21\x65\x5d\x00\x3b\xa5\x7c\x21\x4d\x9c\xcf\xfe\x36\x1e\x7b\x83\xda\x90\xf1\xf7\xf0\xf8\xf6\xb9\x96\xda\xbe\x44\xdf\xa2\xb0\x21\xfc\xa8\x96\x20\x54\x22\x16\x22\x71\x28\xe1\xcc\xcd\x89\x15\x59\x9f\x76\xa5\xaf\xfd\x42\xab\x93\x01\xfd\x7e\x87\x14\x9d\xb4\x41\xdb\xd3\xc7\x8f\x37\xd4\x0d\xd8\x52\x3b\x60\xb4\x7e\xf8\xcf\x23\xdd\xcf\xe3\xc1\x36\xa7\xac\x90\xa1\x16\x17\x42\x89\xc2\x15\xa0\x5c\x31\x27\x06\x9d\xc2\xb9\x4e\x8c\xff\x17\xe1\x94\x4a\xa9\x97\x05\xa9\x7e\xee\x55\x1f\x72\xf0\x1b\x02\x13\x26\xcb\x70\x8e\x20\x98\x53\xaa\x99\xa0\x40\xbe\xa9\xbb\x61\x9b\x3e\x68\xc0\xb8\x38\x26\x63\x52\x27\xf7\x0a\x67\x28\x75\xaf\x85\xa4\x4b\x4f\x51\x3b\x5e\x2e\x4f\xa9\x64\x8a\x7d\x5f\xfe\x1b\x5c\x19\xaa\xeb\xe4\x6b\xd6\x45\x64\x82\xf8\x19\x2d\x2f\x28\x0d\x85\x9e\xb0\x9f\x26\x15\x08\x64\xc6\x65\x6f\x46\x58\x2a\x06\xd8\x3d\x52\xa2\xba\x67\x16\xdf\xec\x3a\x47\x96\xea\x1b\xab\x63\xf5\x59\x6e\x03\xc3\xd6\x6c\xf6\xad\xdd\xc7\x2c\x74\xde\x60\xe4\x09\x14\xce\x58\xdf\x8d\x85\x6a\x1b\xf2\x5a\xaf\xae\x5b\x71\xff\xa4\x3f\x6c\xdd\x40\x23\x5e\x79\x75\xb8\x66\x3f\x94\x07\xc7\xdd\x13\x6b\x95\x8a\xec\x3d\x96\x55\x4c\x87\x3d\x35\xaa\x1f\x76\x8b\xd2\x76\x28\x30\x1a\x2d\x18\x8b\x58\x65\x45\x81\xe5\x03\x05\x0d\xc6\x4f\x50\xcd\x77\x43\xcb\x1d\xc1\x9e\xd1\xb2\x41\xd4\x62\xf5\x95\x2d\x23\x1b\x06\xeb\xa3\x88\x2f\xdf\x27\x9d\xd2\x57\x4d\x44\x4b\x2c\x86\x12\x7e\x67\xa4\xba\xac\xee\x86\x3b\xc2\x6d\xea\xdd\xaa\xda\x00\x93\x65\x41\x0b\x94\x8d\xcf\x1b\xc8\x42\x12\x08\x03\x4a\x83\xd4\x2a\x23\x86\x02\x55\x82\x56\x73\x9f\xbc\x7d\xc0\x9b\xda\x0e\xc0\x7a\x95\xf9\x93\x32\xf2\x41\x6b\x08\x7c\x47\x3a\x56\x40\xff\xe2\xe2\x26\x2e\xd2\x9d\xbf\x2c\xa1\xbc\x0c\x67\xc7\x87\x21\xa4\x63\xf9\xd5\x7c\x74\xbc\xab\xe3\xae\x2e\xde\x75\xfd\xf3\x83\x45\x2e\x3c\x71\xf8\x33\xcf\xc3\x04\xad\x44\x9b\x7f\x75\xd4\xbc\xf0\x8e\x5e\xf3\x4b\xe1\x56\xd8\xbc\x4e\xd0\x70\x37\x0d\xb6\xc0\x51\x38\xde\x67\xc2\x02\x53\xa9\x8f\xe1\x36\x27\xee\x04\xd7\xbb\x50\xea\x70\x74\xfb\x51\xe2\xac\x15\x7d\x1c\x08\xef\xb4\xfb\xda\xd5\x3d\xe5\x0c\x84\xb1\xbb\x7e\xbd\x01\x6d\x5d\x7c\xaf\x42\x6c\x95\x58\x67\x66\x6f\xf1\x62\xfb\x6b\x46\xac\x95\xf5\x37\x3e\x9d\x8e\xe4\xf5\x46\x6a\x87\xbd\xfb\xfa\x07\x9d\xd8\xc5\x9c\x09\x7b\x78\x02\x9b\xb2\x60\x3c\x03\xb2\xe1\x2b\x56\xcf\xae\xff\x09\x1b\x6a\x16\x45\x59\xe4\x45\x5e\x64\xc2\xe6\x6e\x1e\xc5\xba\x98\x69\xce\x1e\x79\xce\xef\x77\xc4\x6e\xbe\xe6\x06\xe8\x33\xe7\xef\xe1\x01\x2e\xa1\x54\xa8\xea\xdd\xf1\xe3\xcb\xcb\x01\xa1\xcd\x09\xdb\xc1\x7c\xee\x93\x55\x28\x23\x92\xea\xd1\xae\xc9\x4d\x23\x3c\xa5\xeb\x04\x6d\x5a\x7c\x9d\xc5\x62\xe8\x12\xbb\xd5\x0a\xde\x54\xc4\xee\xf9\x70\xce\xa8\xe2\xbc\xdb\xba\x0b\x34\x76\xf0\x72\xbc\x75\x5f\x73\x23\xca\x53\x2a\xaf\xc2\x9b\xc9\x0e\x08\x9a\x62\x90\x68\x32\xc1\xd5\xec\x14\x1c\x26\x54\x1e\x36\xef\x2e\x47\x68\x8c\x2b\xa8\x61\x97\xbf\x1d\xaf\xaa\x17\xca\xea\x2e\x9c\x3a\x99\x0a\x29\x29\x39\x1e\x01\x3d\x5c\x13\xba\xbc\x5d\x45\xc3\xd3\x37\x1c\x05\x4f\xe0\xb0\x7e\x97\xdf\x9b\xc9\x2b\x6d\x3b\xb8\xa2\x7e\x04\x6e\xd9\x70\x75\xf1\xee\xdb\xf8\xeb\x58\xee\xca\xdf\x1d\xaf\xbd\x6b\xb4\x54\x43\xef\xcd\x3b\xc0\x6b\xfe\xe0\xb1\xd7\x66\xb5\xd0\xb7\xb9\xc3\x50\xb1\x20\xde\xd5\x23\x61\xe3\x73\x27\x65\xf5\x04\x32\x8c\xf7\x41\xef\x03\xfd\xf8\xcf\xd1\x88\x18\xd0\xd9\x1c\x8e\x3c\x64\x51\x94\x32\xd0\x7f\x13\xcb\xef\x79\xe3\x8f\x00\x00\x00\xff\xff\x4f\x4e\x49\x9d\x02\x1d\x00\x00"),
		},
		"/helm-operator-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "helm-operator-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 6000,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4f\x73\xdb\xb8\x15\xbf\xfb\x53\xbc\xb1\x0f\xb9\x58\xa4\xd3\xcd\xee\x81\x99\x1c\xda\x4d\x37\xc9\x4c\x92\x7a\xea\x4c\x67\x7a\xda\x7d\x02\x9f\x44\x54\x20\xc0\x02\x8f\x52\x59\xcf\xf6\xb3\x77\x1e\x40\x51\xa4\x28\xc9\xf6\xf6\xd0\xe5\xc5\x32\x80\xf7\xff\xf7\xfe\x00\x8b\xc5\xe2\x0a\x1b\xfd\x37\xf2\x41\x3b\x5b\x00\x36\x4d\xc8\xb7\xaf\xaf\x36\xda\x96\x05\xbc\xa7\xc6\xb8\xae\x26\xcb\x57\x35\x31\x96\xc8\x58\x5c\x01\x58\xac\xa9\x80\x95\x69\xff\xb5\xa8\xc8\xd4\x0b\xd7\x90\x47\x76\xfe\xf1\x11\xf4\x0a\xb2\xaf\x58\x53\x68\x50\x11\xfc\xfa\x6b\x7f\x3a\xfe\x5b\xc0\xe3\xe3\x74\xf7\xf1\x11\xc8\x96\x72\x2c\x34\xa4\x84\xb5\xa7\xc6\x68\x85\xa1\x80\xd7\x57\x00\x81\x0c\x29\x76\x5e\x76\x00\x6a\x64\x55\x7d\xc6\x25\x99\x90\x16\xce\x6b\x22\xb4\xec\x91\x69\xdd\xa5\xa3\xdc\x35\x54\xc0\x5f\x49\x79\x42\xa6\x2b\x00\xa6\xba\x31\xc8\xd4\xb3\x1e\x59\x27\x9f\x99\x48\xb9\x28\x47\x3e\xb4\xd6\x31\xb2\x76\x76\x44\xd3\x78\x57\x13\x57\xd4\x86\x4c\xbb\x3c\x28\x8f\xa2\xc2\x35\xfb\x96\xae\xe3\xa1\xbd\xcd\xf1\x37\xf9\xad\x56\xf4\x47\xa5\x5c\x6b\xf9\xeb\x65\x71\x5b\x67\xda\x9a\x42\xd1\xfb\xfb\xcf\x16\x97\x86\xbe\x69\x63\xc8\x7f\xfb\xfc\x90\xbc\x9e\xbe\x45\xaf\x79\xe4\xc2\x26\x2c\x14\x0e\x7b\x00\xca\xd9\x95\x5e\x7f\xc1\xa6\x18\x2d\xce\x8d\x4d\x74\x8b\x74\x7a\x72\xb2\xa4\x15\xb6\x86\xbf\xb8\x92\x0a\xb8\xfb\xe1\xee\xee\x82\x60\xf2\x1c\x46\xc4\x41\x42\xc1\x53\xc1\x69\x2d\x19\xdf\xdb\x36\x58\xf5\x23\x79\x7e\x18\xf6\x13\x76\x2e\xef\x92\x09\xf2\xeb\xc8\x0e\xf2\x7c\x40\xdd\x79\x5b\xde\xdc\xdd\x1d\x58\xf4\xe7\x6e\xf6\x7f\xe1\xef\xae\x85\x9d\x36\x06\x2c\x51\x09\x5c\x51\x20\xe0\x9d\xdb\x07\x46\x34\xef\xe4\x08\x5a\x06\x76\x40\x81\x71\x69\x74\xa8\x60\x8b\x46\x97\xc8\x54\xc2\xb7\xcf\x0f\x03\x3b\xe5\xac\x25\x15\xe1\x03\xb8\x46\x6d\x03\x43\x32\x6d\x26\xf9\x7c\x40\x6f\x4e\x05\xf4\xe6\xd9\x01\xbd\xb9\x18\xd0\x1b\x48\xde\x8d\x79\x04\x9b\x76\x49\xde\x12\x53\x44\x36\x9b\x30\x53\x6f\xee\xf4\x91\x98\x69\xe8\x6f\xfe\x9f\xa1\x3f\x65\xf5\x9b\x83\xd5\x8f\x8f\x64\xcb\xd1\xe1\x6f\x15\xc1\xca\x19\xe3\x76\xda\xae\xfb\x68\x83\x0e\xb0\x72\x1e\xda\x20\x6b\x08\xaa\x0d\xec\x6a\x1d\xa8\x84\x8d\x75\x3b\xfb\x73\xe5\x02\x07\x58\x69\x43\xb7\x03\xa3\x5d\xa5\x55\x95\x30\x72\x80\x91\x83\xd2\xed\xa1\x23\x44\xf2\xc3\x83\xdb\x59\x58\x6b\x96\xca\xe8\xc0\x23\x57\x07\x54\x00\x57\x68\x7b\xc1\x6b\xcd\x55\xbb\x04\xe7\x05\x8e\x60\xf4\x86\x32\x81\xe9\x2b\x63\x00\x4d\x70\x83\x88\x5a\xea\x0b\xe8\x43\x3c\xb4\x65\x17\x69\x94\xb3\x8c\xda\x92\xbf\x85\x25\x19\xb7\xcb\x4e\xc2\xbe\xc6\x2e\x31\xdc\x09\x9e\xd9\x49\x99\xdb\xea\x92\x00\x2d\x84\x50\xfd\x9c\x40\x75\x64\xae\x74\x10\xed\xac\xe8\x59\x3b\x4f\x49\x6f\x67\x09\x7e\xf9\x54\xca\x16\x77\x3f\x69\x43\xbf\xbc\x8d\x8e\x14\xf8\xa3\x55\x74\xdb\xfb\xe2\x95\xa7\x81\x51\xb2\x75\xca\xe3\x83\xe6\x8f\xed\x32\xfa\x27\x83\xaf\x7f\x8a\xb6\x90\x65\xdf\xc1\x86\x3a\x08\x95\x6b\x4d\x09\xcb\x03\x8f\xeb\xa4\xe2\x75\xef\xcc\xc4\xe8\xfa\xa0\xfb\xb5\xc8\x8d\x6e\xa2\x12\xb4\x85\xff\xe4\x59\x08\x55\x3e\x77\xc7\x1e\xec\x21\x54\xa5\xf6\x2f\x4a\xc3\x10\xaa\xa7\xd3\x2f\xd5\x20\x49\x85\x87\x87\x8f\x13\x88\x5f\x1d\xd2\xf2\xe1\x63\x34\x93\x1d\xa0\x52\x14\x42\x34\xff\x43\x8f\x97\xa0\xd9\xf9\x6e\x56\x94\xd7\x9a\x17\x1b\xea\x5e\x56\x8d\xe7\x4a\x8c\x0f\xcf\x34\x8f\x20\x27\x3b\x38\xd2\x13\x96\x0b\x67\x4d\x77\x0b\x3b\x82\x9d\xb3\xaf\x18\x96\x04\xd2\xb9\x44\x79\x55\xd5\xae\xbc\x7a\x41\xc9\xd5\x61\xc8\xbf\x3d\x4a\x86\x14\x1c\xd2\x85\x2b\x3c\x00\x5d\x08\x83\xc0\x74\xef\x33\x01\x5b\x72\xda\x5b\xa0\x6c\x9d\xdd\x02\xee\xc1\x54\xc6\xc1\x47\x4e\x65\xf0\x69\x35\xb0\x98\xc8\xf9\x47\x1b\x38\x02\x30\xb4\xaa\x8a\xf2\x6e\xa3\xf3\x7b\x57\x8c\xb2\x61\xa0\x47\x23\x6e\xe8\xa0\x71\xda\x72\x00\x64\xc8\x89\x55\x2e\x90\x28\x73\x01\x99\xee\xd3\x01\x30\x00\xee\xc5\x8b\xd8\x43\xe5\xe8\x7b\x4a\x1b\xe8\x28\x0f\x36\xd4\xdd\x46\x0d\x47\x05\x65\x9f\x9c\xfb\x4a\x32\xb0\x19\xa5\x2a\x2e\xdd\x96\x6e\x61\xa7\xb9\x12\xef\x4c\x53\xb2\xcf\xa4\x38\x7a\x89\xd1\x84\xaa\x1a\x98\x88\x13\xb5\x8d\x46\x27\xb0\xec\x13\x9d\x4a\xa8\xc8\xd3\xf9\x94\x99\x22\xf0\x39\x4d\x21\xa6\x8d\x90\xa5\xd0\x5c\x4e\x9b\xdf\x04\xbe\xf3\x35\xff\xa8\xbb\xa3\xa7\x88\x9d\xc8\x3d\x21\x6e\x48\x36\x4d\x21\xeb\xb0\x36\x47\x05\x10\x6d\xd9\xc7\xa2\x6f\x12\xa8\x04\x29\xda\xc7\xf1\xb6\xcb\x62\x67\x31\xc8\x4c\x5e\xfa\x89\x84\x8f\xa4\x68\x29\x6c\xc3\xa1\x72\x0d\x02\x39\xf6\x21\x5f\x93\x4f\x39\x51\xe3\x86\x52\x0d\x17\xbe\xf9\x81\xf1\xc1\xf2\xf3\xb1\x18\xeb\xbe\x10\xdd\x5f\x1a\x95\xd8\x61\xc7\x5c\x2e\x8b\x88\x3a\x8e\x38\x52\xdd\x70\xf7\x5e\xfb\x02\x1e\x87\xc2\x36\xf4\xa2\x61\x9e\x9e\x4f\x16\x47\x43\x71\x1f\x2b\x4f\x31\x3e\xd6\xc1\x75\x21\xf3\x7d\xe0\x6b\xd0\x35\xae\x29\x75\xe9\x09\x65\x06\x3f\x69\x1b\xe7\x37\xa8\xa5\xdf\x7a\x52\x72\xd5\x39\xf0\xf3\x64\x08\x03\x49\x57\x8d\x3c\x60\x9b\xee\x49\x92\xb9\x15\x73\x13\x8a\x3c\xaf\xda\x65\x56\x3a\xb5\x21\x9f\x29\x57\xe7\x3e\xdf\x11\x6e\x69\xe7\xfc\x26\xe4\x13\x69\x39\xe3\x3a\x8c\x98\x0b\x26\xe4\xba\x23\x57\x21\x51\x81\x71\x3d\xc9\x1a\x48\x32\x0b\xe8\xb9\x6b\x17\x0b\x85\x2a\xa7\x6c\x8b\xd7\xd9\x5d\x76\xb7\xf0\xea\x0f\x53\xba\xfb\xd6\x98\x7b\x67\xb4\xea\x0a\xf8\xb4\xfa\xea\xf8\xde\x53\x18\x9b\xd7\x38\xcf\xa3\xeb\xca\x30\x59\x32\x37\xd3\x3b\x42\x8a\xc4\xbd\xf3\x5c\xc0\x77\x77\xdf\x1d\x86\x7c\xa3\xb7\x64\x29\x84\x7b\xef\x96\x34\x6e\x1e\xc2\xe3\xc3\x71\x3f\x69\xe6\x0c\xe2\x32\x72\x55\x40\x5e\x11\x1a\xae\xfe\x3d\xda\xd2\x56\xb3\x46\xf3\x9e\x0c\x76\x0f\xa4\x9c\x2d\xfb\x5b\xe1\xfe\x63\x5d\x93\x6b\x79\xd8\xfb\x7e\xd8\x13\xd4\xeb\xdf\xa9\x66\xc1\xb5\x5e\x51\x18\x6b\xe0\xe9\x9f\x2d\x05\x0e\x53\xad\x54\xd3\x16\xf0\xfd\x5d\x3d\x59\xac\xa9\x76\xbe\x2b\xe0\x87\x37\x5f\xf4\xb0\x91\x0a\xd3\x17\xa9\x0e\x23\x1e\x37\xf0\xc9\x2a\xd3\x96\x94\xba\x65\x3f\x58\x4e\xe7\xc0\xb3\xe3\xaa\xf3\xf3\xfe\x25\x2c\xa5\xac\xbd\xdd\x77\x99\xd1\x60\x59\xd1\xbe\x1d\x97\xa4\x0c\x7a\x2a\x53\x5f\xc9\x46\xb4\x27\xe7\xa5\x54\x03\xa2\x36\xf7\xc9\xdf\xde\x39\x8e\x23\xd7\xe4\x84\x84\xf4\x2f\xd6\x74\x05\xc8\x05\xfa\x89\xb9\x08\x2e\x0e\x3b\x53\x71\x93\x06\x3c\x9f\x40\xce\x77\xad\xb9\xe6\x13\x56\xf3\x5b\xe6\xd3\x25\x77\xce\x72\x8b\xbe\x67\x29\x49\x9f\x9f\x18\xea\x9e\x51\x65\x5f\xc0\x36\x8f\x74\xe7\x1f\x16\x4e\x38\xf8\xec\x15\xff\x9c\x73\x84\x60\x72\x6c\x1a\xdb\x8b\x22\xf0\x99\xfc\x8f\x4f\x1e\x89\xb8\x18\xe6\x33\x06\x9d\x8f\xf6\xc4\xa0\x39\x58\x2f\x8a\xc0\x67\xf2\x3f\x3e\x39\xcb\x87\x23\xb0\xa1\x5f\x4f\x6a\xc1\x47\xb7\x93\xb4\x5f\x49\xc3\x9b\xbc\x2d\x88\x97\x17\x0b\x8e\x4b\x8b\xe1\xad\xee\xdd\xe4\x12\x7e\xf4\x66\x77\x7a\xb5\x77\xe8\xa6\x5d\xd2\x22\x74\x81\xa9\x1e\xb4\x7a\xfa\xa1\xea\x06\x64\x21\x95\x9b\xd6\xc7\xa7\xb4\x53\xfa\xed\x5f\x2e\xc8\xf3\x42\xca\xf3\xbb\xb9\x97\x72\x85\x99\xf2\x7c\x8e\x9a\xa2\x0e\xef\x26\x71\x39\x3a\xb2\xa1\xee\x24\xf3\x9c\x4d\xc8\xc6\xf9\x7f\xac\xd8\x39\xad\x22\xe1\x05\x9d\xb6\xe4\xf5\xaa\xbb\xa8\xd3\xf3\x8c\x3e\x09\xeb\x1f\x5d\x2d\x63\x39\xb8\x36\x5e\x1c\xce\xbf\x47\x3d\xfd\x0e\x95\x20\xfc\xbf\x44\x63\x46\x7f\x2a\x1e\xb3\x43\xcf\x8e\xc8\x5c\xbd\x67\xc7\x64\x46\x7a\x2a\x2a\xbf\xd1\xfc\x43\x7a\xfe\x37\x00\x00\xff\xff\x01\xf7\x23\xa8\x70\x17\x00\x00"),
		},
		"/tiller-ca-cert-configmap.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "tiller-ca-cert-configmap.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 226,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\x0a\xc2\x30\x0c\x40\xef\xfd\x8a\xfc\x40\x07\x82\xa7\xde\xa4\x78\x53\x2f\x0e\xef\xb1\xcd\xb4\xd8\x66\xa3\x8b\x22\xd4\xfe\xbb\x6c\x4c\xd1\x63\x78\x2f\x2f\x29\x05\x42\x07\xcd\x96\xf1\x1c\xa9\x0d\x31\x52\x6e\x77\x47\xa8\x55\x6b\xad\x70\x08\x27\xca\x63\xe8\xd9\xc0\x63\xa5\x6e\x81\xbd\x01\xdb\x73\x17\x2e\x7b\x1c\x54\x22\x41\x8f\x82\x46\x01\x30\x26\x32\xd0\xc5\xfb\x53\x5f\x29\x26\x2d\x71\xd4\x0e\xb5\x9b\xe5\xe5\xc8\x01\x13\x8d\x03\x3a\x82\x5a\x97\x95\x79\x34\x50\xca\x3f\x2d\x05\x88\xfd\xa4\x7d\xfa\x0e\x1b\x97\xc5\xc0\x4b\x4d\x31\xf6\xc4\x02\x6b\x68\xbe\x1f\xdb\x8d\xa5\x2c\xb6\x67\x99\xc8\x6f\xe1\x1d\x00\x00\xff\xff\x60\xd7\x1c\xac\xe2\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-helm-operator-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-helm-release-crd.yaml.tmpl"].(os.FileInfo),
		fs["/helm-operator-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/tiller-ca-cert-configmap.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
