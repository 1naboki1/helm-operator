// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-helm-operator-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-operator-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 948,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x39\x6f\xdc\x30\x10\x85\x7b\xfe\x8a\x01\x5c\x38\x09\x2c\x05\xee\x02\x75\xb6\x8b\x14\x09\x52\x28\x47\x13\xa4\x18\x92\x4f\x59\xc6\x5c\x8e\x30\x24\x37\x87\xb0\xff\x3d\x90\xb4\x06\xbc\x8e\xed\x34\xdb\x8d\xe6\xd2\x9b\xc7\xaf\x69\x1a\x73\x46\x9f\x36\xa0\x0c\xdd\x05\x07\x62\xe7\xa4\xa6\x72\x41\x2e\xd6\x5c\xa0\xa4\x12\x91\x2f\x88\x93\x3f\x4a\x91\x0d\xc9\x87\xf4\x9d\x58\x61\xce\x48\x52\xfc\x4d\x09\xf0\xf0\x34\x88\xd2\xbb\x6a\xa1\x09\x05\x99\x7e\x86\xb2\x59\x46\x1a\xcb\x19\x7e\xfe\x03\x72\x26\x27\xa9\xa8\x44\x7a\xd1\x5f\x5f\xdd\xbc\x6c\x0d\x8f\xe1\x0b\x34\x07\x49\x1d\xed\x2e\xcd\x6d\x48\xbe\xa3\x8f\xab\xaa\xab\x55\x94\xd9\xa2\xb0\xe7\xc2\x9d\x21\x8a\x6c\x11\xf3\x1c\x11\x25\xde\xa2\xa3\x21\xd6\x5f\xcd\x06\x71\xdb\xc8\x08\xe5\x22\x6a\x9e\x2e\x4d\x13\x85\x81\xda\x0f\xbc\x45\x1e\xd9\x81\xf6\xfb\x43\xf7\xf2\xd9\xd1\x34\x1d\x57\xa7\x89\x90\xfc\x7e\x6f\x66\xcf\xee\x8b\x55\xcb\xae\xe5\x5a\x36\xa2\xe1\x0f\x97\x20\xa9\xbd\x7d\x93\xdb\x20\xaf\x77\x97\x16\x85\xef\x6e\xb9\x59\xdd\xeb\x25\xe2\x94\x87\x18\xad\x11\xcb\x78\x43\x3c\x86\xb7\x2a\x75\xcc\x1d\x7d\x3d\x7f\x75\xfe\x6d\xd9\xa9\xc8\x52\xd5\xe1\x28\xb9\x83\xda\x7b\x89\x86\x92\xa4\xfe\xd0\xf8\xb9\x7f\xff\x74\xef\x09\xae\xbf\x5e\xc9\x39\xad\x09\x12\xd1\x63\x98\x17\xdc\x99\xf0\x8c\x36\x43\xf4\xef\x9b\x3c\xb3\x3d\x57\xfb\x03\xae\x1c\x5c\x7e\x14\xcd\xff\x08\x7f\x88\xd6\x43\xf6\x1e\xa3\x2d\xe6\x39\xf2\x18\xb8\xc6\xb2\xe2\x37\x53\xfa\x37\x00\x00\xff\xff\xad\xec\xff\x2b\xb4\x03\x00\x00"),
		},
		"/flux-helm-release-crd.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-release-crd.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 7933,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5b\x6f\xdb\xc6\x12\x7e\xd7\xaf\x98\xe3\x73\x00\xdb\x07\x12\x73\x3b\x38\x68\x05\x04\x49\x10\x23\x4d\xea\x5c\x0c\x3b\xce\x8b\xe1\x02\x23\x72\x48\x6e\xbd\x17\x76\x2f\xb2\xd5\xa2\xff\xbd\xd8\x25\x29\x89\x14\x45\x51\x8e\x5b\xa0\x48\xf7\x25\x11\x77\x77\xf6\x9b\x6f\x66\xbe\xbd\x78\x32\x99\x8c\xb0\x60\x5f\x48\x1b\xa6\xe4\x14\xb0\x60\x74\x67\x49\xfa\x5f\x26\xba\xf9\xce\x44\x4c\x3d\x9a\x3f\x99\x91\xc5\x27\xa3\x1b\x26\x93\x29\xbc\x76\xc6\x2a\x71\x4e\x46\x39\x1d\xd3\x09\xa5\x4c\x32\xcb\x94\x1c\x09\xb2\x98\xa0\xc5\xe9\x08\x40\xa2\xa0\x29\xe4\xc4\x85\x26\x4e\x68\xc8\x44\xfe\x47\x94\x72\x77\x17\x27\x11\x53\x23\x53\x50\xec\x47\x66\x5a\xb9\xa2\x1c\xba\xd6\x5b\x5a\x30\x7e\x00\x40\xb9\xee\x5b\xe2\xe2\xbc\x34\x16\xbe\x72\x66\xec\x69\xbb\xe7\x3d\x33\x36\xf4\x16\xdc\x69\xe4\x4d\x08\xa1\xc3\xe4\x4a\xdb\x8f\x2b\xe3\x13\xc8\xf5\x08\xc0\xc4\xaa\xa0\x29\x84\x8e\x02\x63\x4a\x46\x00\x98\x24\xc1\x33\xe4\x67\x9a\x49\x4b\xfa\xb5\xe2\x4e\xc8\xe5\xc4\x1f\x2f\x3e\x7d\x3c\x43\x9b\x4f\x21\x32\x16\xad\x33\x51\xb5\x92\xb7\x12\xc6\xd4\x44\xac\xe3\x06\xb0\x0b\xbf\x94\xb1\x9a\xc9\x6c\x97\xa9\x8b\xf0\xab\x61\xac\xf1\x69\x90\xad\x58\xc9\xd2\x13\x73\xf5\xe2\xe8\x65\xe4\xe7\x3c\x7f\x7e\x50\x81\x4a\x0e\x8e\xaf\x23\x41\xc6\x60\xd6\x04\xfd\xa1\xf1\xad\x7f\xa1\x3a\xf6\x51\xac\x09\xfd\x4a\x9f\x99\x20\x63\x51\x14\x0d\x93\xaf\x5a\xe6\x12\xb4\xfe\x83\x71\x33\x5d\xe5\x53\x45\x6e\x09\x7c\x0a\xbf\xfd\x3e\x02\x98\xd7\xd9\x39\x7f\xb2\xfa\xb5\x8c\x42\x69\x39\x74\x85\x99\xa4\xe7\x94\x4c\xc1\x6a\x57\xaf\x65\xac\xd2\x98\xd1\xf2\xdb\x1c\x39\x4b\x02\xca\xd2\x86\x2a\x48\xbe\x3a\x7b\xf7\xe5\xd9\x45\x9c\x93\xc0\x69\x35\xad\xd0\xaa\x20\x6d\x59\x8d\x29\x98\xaa\xb2\xb6\x6e\x9a\x7e\x71\x4c\xfb\xf5\xae\x0e\xe3\x1c\xb5\x3d\xbc\x5e\xeb\xed\xb2\xe0\x9b\x4f\xca\xba\xe4\x1a\x1d\x00\x09\x99\x58\xb3\x22\x80\x83\xcf\x39\x85\xe4\xae\x7d\x06\x9b\x33\x03\x55\x66\x80\x45\x9d\x91\x35\x11\xbc\x4b\x41\x2a\x0b\xc6\x15\x05\x67\x94\x8c\x81\x59\xb8\x65\x9c\x43\x42\x29\x3a\x6e\xc1\xaa\xd6\x2a\x00\xf3\xa7\x51\xeb\xdb\x46\x80\xd7\xfc\x40\x6b\x49\xcb\x29\x1c\xfc\x34\xbf\x7a\x3a\x7e\x76\xfd\x9f\x83\xc6\x88\xb5\xb4\x1f\xe6\x4f\xed\x82\x8f\x5d\x0f\xfe\x19\x41\x46\x92\x34\x5a\x4a\x60\xb6\x00\x4c\x53\x76\xc7\x64\x06\x36\xa7\x0d\x8f\x64\x5d\xba\x60\x95\x1f\x00\x75\x4a\x95\xab\xdc\xcb\xdb\x2b\x9c\xfc\xfa\x78\xf2\xfd\xf5\xd1\xd5\xa4\xfa\xdf\x7f\xeb\x4f\xc7\x2f\x5a\x24\x94\xe1\x58\x0a\xc8\xfe\x44\x84\x69\x1d\x6c\x78\x5f\x56\xce\xd5\xc4\xf8\xaf\x66\xa5\x33\xab\x86\x66\xd3\xfb\xd2\xf4\x9f\x4f\x01\x13\xa4\x9c\xed\x75\x3d\xb8\xcd\xa4\xb1\xc8\x39\x28\x0d\xae\xc8\x34\x26\x54\xcf\x05\x26\xc1\x90\x17\x2c\xd3\x09\xd7\xeb\x70\x46\xba\xd5\x97\x2a\x2d\xd0\x86\xde\xff\xff\xaf\x95\x9a\x86\xec\x17\xe4\xae\x5d\x83\x2d\x58\xef\xd2\x25\xe3\x25\xc5\x61\xa2\x97\x0a\x47\x06\x94\x0c\x35\x5b\x83\xed\x44\x36\x53\x8a\x13\xca\x51\x0b\x57\x4c\x97\xe5\xa4\xfd\x96\x0f\x33\x4b\xb2\x96\x0c\xe5\x5a\xb9\x2c\x87\x84\x38\x59\x7a\xa4\x29\x68\xed\x70\x30\x5a\x71\x3e\xc3\xf8\xa6\x0d\xa4\x9c\xa1\x66\x3f\x53\x6c\xdb\x79\xb0\x45\xc0\x7c\x23\x89\x33\xbe\xe1\x55\xa7\x67\x64\xc7\xa5\x57\x05\x69\x1f\xaa\x25\x14\xe3\xfd\x6c\xaa\x9a\x92\x4b\x87\x53\x64\xdc\x69\x6a\x27\x42\xbf\x97\x4b\xda\xf7\x43\x56\xf2\xbd\x2c\x1a\x57\xf8\xad\x69\x1b\xe5\xc0\x52\x90\x44\x49\x38\x25\xec\x07\xad\x36\xd1\x85\xae\x7f\x66\xc2\x8c\x27\xfc\xad\x52\x37\x1d\xd1\xe8\x65\x5d\xd3\x9c\xa4\x85\xdc\x4f\x85\x54\x2b\x01\xda\x49\xe9\x85\x34\x71\xbe\xfa\x97\xf1\xd8\x1b\xd4\x96\x8a\xdf\xc0\xe3\x8f\x03\x6b\xa5\xed\x25\xfa\x16\x99\x0d\xe1\x47\xb9\x00\x26\x13\x36\x67\x89\x43\x0e\xa7\x6e\x46\x5a\x92\xf5\x65\x57\x78\xed\x67\x4a\x8e\x3b\xec\x43\xbd\xbd\x05\x6b\xcf\x1e\x3f\xde\xa2\x1b\xb0\x43\x3b\xa0\x57\x3f\x7c\xf3\x48\xf7\x63\x3c\xf8\xe6\xa4\x65\x3c\x68\xb1\x60\x92\x09\x27\x40\x3a\x31\x23\x0d\x2a\x85\x33\x95\x18\xff\x2f\xc2\x09\x15\x5c\x2d\x04\xc9\x76\xed\x95\x0d\x75\xe0\x0d\x41\x13\x26\x8b\x70\x2e\x22\x98\x51\xaa\x34\x81\x40\x7d\x53\xed\x86\xcb\xf2\x41\x03\xc6\xc5\x31\x19\x93\x3a\xbe\x57\x38\x83\xd4\xbd\x61\x9c\x2e\x7c\x8a\xda\x7e\xb9\x3c\xa1\x42\x53\xec\xf7\xe5\x7f\xc1\xa5\xa1\x4a\x27\xdf\x68\x25\x22\x13\xa6\x9f\xd2\xe2\x9c\xd2\x20\xf4\x84\xed\x32\x29\x41\xa0\xd6\xb8\x68\xf5\x30\x4b\xa2\x23\xbb\x7b\x24\xaa\x79\x06\xf3\x9b\x5d\xe3\x08\x56\xb6\x3e\x1d\xab\xce\xa6\x5b\x32\x6c\xcd\x67\xbf\xb5\xfb\x98\x85\x9d\x37\x38\x39\x06\xe1\x8c\xf5\xbb\x31\x93\xcb\x0d\x79\x6d\xaf\xae\xb6\xe2\xf6\xcd\xa5\xdb\xbb\x8e\x8d\x78\xc5\x6a\xb7\x66\x3f\x14\x83\xfd\xf4\xc4\x4a\xa6\x2c\xfb\x80\x45\x19\xd3\x6e\xa6\x7a\xed\xc3\xb0\x28\xed\x86\x02\xbd\xd1\x82\xbe\x88\x95\x5e\x08\x2c\x1e\x28\x68\xd0\x7f\x82\xaa\xdb\x0d\x2d\x06\x82\x3d\xa5\x45\x8d\x68\x89\xd5\x2b\x5b\x46\x36\x7c\xac\x8e\x22\x5e\xbe\xc7\x0d\xe9\x2b\x3b\xa2\x05\x8a\xae\x82\x1f\x8c\x54\x15\xe5\x5d\x77\x20\xdc\x5a\xef\x56\x6a\x03\x9a\xac\x66\x34\x47\x5e\x73\x5e\x43\x66\x9c\x80\x19\x90\x0a\xb8\x92\x19\x69\x10\x28\x13\xb4\x4a\xb7\x93\xb7\x0d\x78\xdb\xb6\x53\x36\xb9\xed\xac\xbd\x05\xf2\xe7\xc6\x41\x9a\x49\xb8\xcd\x59\x9c\xb7\x18\xa7\x3b\x66\x6c\xd7\x1e\x32\x88\xc8\x75\xf1\xfb\x9b\x16\xca\x83\x4a\xdb\x00\xca\xe0\xbe\x55\x52\x02\xfd\xa7\x44\xfe\xa2\x12\xa9\xe8\xfe\xba\xfa\xa0\x3b\x7f\xaf\x44\x7e\x11\x8e\xd9\x0f\x53\x24\x4e\xf3\x7b\xd7\x88\xd3\x43\x83\x79\x79\xfe\xbe\x19\xb3\x6f\x2c\x9b\xc2\xeb\x96\x3f\x1e\x3e\x4c\xd0\x0a\xb4\xf9\xbd\xa3\xe6\x27\x0f\x64\xcd\x0f\x85\x5b\x66\xf3\x4a\x34\xc2\x35\x3e\xf8\x02\x47\xe1\x26\x94\x31\x0b\x9a\x0a\x75\x0c\xb7\x39\xe9\x46\x70\x3d\x85\x5c\x85\x53\xee\xb7\x12\x67\x25\xe9\x53\x47\x78\x27\xcd\x87\xce\xe6\x81\xb0\x23\x8c\xcd\xf1\xeb\x9b\xe2\xce\xc1\x1b\x0a\xb1\x73\xc6\x7a\x66\xb6\x06\xcf\x77\x3f\xfc\xc4\x4a\x5a\x7f\x39\x56\x69\x4f\x5d\x6f\x4d\xed\xb0\x76\xdb\x7e\x27\x89\x4d\xcc\x19\xb3\x87\x63\xd8\x56\x05\xfd\x15\x90\x75\xdf\x46\x5b\x7e\xfd\xc0\x6c\xd0\x2c\x8a\xb2\xc8\x4f\x79\x99\x31\x9b\xbb\x59\x14\x2b\x31\x55\x3a\x7b\xe4\x73\x7e\xbf\xdb\x48\xdd\xea\xcb\xb2\xaf\x9c\x7f\x87\xb7\xca\x84\x52\x26\xcb\x27\xda\x4f\xaf\x2e\x3a\x26\x6d\x2f\xd8\x06\xe6\x33\x5f\xac\x4c\x1a\x96\x94\xef\x9b\x75\x6d\x1a\xe6\x53\xba\x2a\xd0\xfa\xd8\x51\x55\x31\xeb\xde\x8b\x76\x78\xa1\xb7\x89\xd8\x06\x87\x33\x8d\x32\xce\x9b\xc7\x09\x81\xc6\x76\xbe\x23\xec\x3e\x1f\xde\xb0\xe2\x84\x8a\xcb\xf0\xbc\x34\x00\x41\x2d\x06\x89\x22\x13\xa8\xd6\x4e\xc2\x61\x42\xc5\x61\xfd\x44\x75\x84\xc6\x38\x41\x75\x76\x09\x92\x76\xa5\x5e\xc8\xcb\x67\x83\xd4\xf1\x94\x71\x4e\xc9\x71\x0f\xe8\x6e\x4d\x68\xe6\xed\x2a\x1a\x3e\x7d\xc3\xf1\x74\x0c\x87\xd5\x9f\x27\xf6\xce\xe4\x95\xb5\x01\x54\x54\xef\xe5\xcb\x6c\xb8\x3c\x7f\xff\x75\xf9\xeb\x34\x1f\x9a\xbf\x03\x5f\x08\xd6\xd2\x52\x76\x3d\xcd\x0f\x80\x37\xef\xfe\xb3\x50\xff\x62\xd5\xa4\xaf\xa3\xc3\x90\x98\x93\x1e\xca\x48\x58\xf8\xcc\x71\x5e\xbe\x16\x75\xe3\x7d\xd0\x3b\x4a\x3b\xfe\x33\x34\x2c\x06\x74\x36\x87\x23\x0f\x99\x89\x82\x87\xf4\xdf\x96\xe5\x1b\x6c\xfc\x11\x00\x00\xff\xff\xa5\x0f\x03\xec\xfd\x1e\x00\x00"),
		},
		"/helm-operator-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "helm-operator-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 6000,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4f\x73\xdb\xb8\x15\xbf\xfb\x53\xbc\xb1\x0f\xb9\x58\xa4\x33\x9b\xdd\xce\x30\x93\x43\xbb\xe9\x26\x99\x49\x52\x4f\x9d\xe9\x4c\x4f\xbb\x4f\xe0\x93\x88\x0a\x04\x58\xe0\x51\x2a\xeb\xd9\x7e\xf6\xce\x03\x28\x8a\x14\x25\xd9\xde\x1e\xba\xbc\x58\x06\xf0\xfe\xff\xde\x1f\x60\xb1\x58\x5c\x61\xa3\xff\x46\x3e\x68\x67\x0b\xc0\xa6\x09\xf9\xf6\xf5\xd5\x46\xdb\xb2\x80\xf7\xd4\x18\xd7\xd5\x64\xf9\xaa\x26\xc6\x12\x19\x8b\x2b\x00\x8b\x35\x15\xb0\x32\xed\xbf\x16\x15\x99\x7a\xe1\x1a\xf2\xc8\xce\x3f\x3e\x82\x5e\x41\xf6\x15\x6b\x0a\x0d\x2a\x82\x5f\x7f\xed\x4f\xc7\x7f\x0b\x78\x7c\x9c\xee\x3e\x3e\x02\xd9\x52\x8e\x85\x86\x94\xb0\xf6\xd4\x18\xad\x30\x14\xf0\xfa\x0a\x20\x90\x21\xc5\xce\xcb\x0e\x40\x8d\xac\xaa\xcf\xb8\x24\x13\xd2\xc2\x79\x4d\x84\x96\x3d\x32\xad\xbb\x74\x94\xbb\x86\x0a\xf8\x2b\x29\x4f\xc8\x74\x05\xc0\x54\x37\x06\x99\x7a\xd6\x23\xeb\xe4\x33\x13\x29\x17\xe5\xc8\x87\xd6\x3a\x46\xd6\xce\x8e\x68\x1a\xef\x6a\xe2\x8a\xda\x90\x69\x97\x07\xe5\x51\x54\xb8\x66\xdf\xd2\x75\x3c\xb4\xb7\x39\xfe\x26\xbf\xd5\x8a\xfe\xa8\x94\x6b\x2d\x7f\xbd\x2c\x6e\xeb\x4c\x5b\x53\x28\x7a\x7f\xff\xd9\xe2\xd2\xd0\x37\x6d\x0c\xf9\x6f\x9f\x1f\x92\xd7\xd3\xb7\xe8\x35\x8f\x5c\xd8\x84\x85\xc2\x61\x0f\x40\x39\xbb\xd2\xeb\x2f\xd8\x14\xa3\xc5\xb9\xb1\x89\x6e\x91\x4e\x4f\x4e\x96\xb4\xc2\xd6\xf0\x17\x57\x52\x01\x77\x3f\xdc\xdd\x5d\x10\x4c\x9e\xc3\x88\x38\x48\x28\x78\x2a\x38\xad\x25\xe3\x7b\xdb\x06\xab\x7e\x24\xcf\x0f\xc3\x7e\xc2\xce\xe5\x5d\x32\x41\x7e\x1d\xd9\x41\x9e\x0f\xa8\x3b\x6f\xcb\x9b\xbb\xbb\x03\x8b\xfe\xdc\xcd\xfe\x2f\xfc\xdd\xb5\xb0\xd3\xc6\x80\x25\x2a\x81\x2b\x0a\x04\xbc\x73\xfb\xc0\x88\xe6\x9d\x1c\x41\xcb\xc0\x0e\x28\x30\x2e\x8d\x0e\x15\x6c\xd1\xe8\x12\x99\x4a\xf8\xf6\xf9\x61\x60\xa7\x9c\xb5\xa4\x22\x7c\x00\xd7\xa8\x6d\x60\x48\xa6\xcd\x24\x9f\x0f\xe8\xcd\xa9\x80\xde\x3c\x3b\xa0\x37\x17\x03\x7a\x03\xc9\xbb\x31\x8f\x60\xd3\x2e\xc9\x5b\x62\x8a\xc8\x66\x13\x66\xea\xcd\x9d\x3e\x12\x33\x0d\xfd\xcd\xff\x33\xf4\xa7\xac\x7e\x73\xb0\xfa\xf1\x91\x6c\x39\x3a\xfc\xad\x22\x58\x39\x63\xdc\x4e\xdb\x75\x1f\x6d\xd0\x01\x56\xce\x43\x1b\x64\x0d\x41\xb5\x81\x5d\xad\x03\x95\xb0\xb1\x6e\x67\x7f\xae\x5c\xe0\x00\x2b\x6d\xe8\x76\x60\xb4\xab\xb4\xaa\x12\x46\x0e\x30\x72\x50\xba\x3d\x74\x84\x48\x7e\x78\x70\x3b\x0b\x6b\xcd\x52\x19\x1d\x78\xe4\xea\x80\x0a\xe0\x0a\x6d\x2f\x78\xad\xb9\x6a\x97\xe0\xbc\xc0\x11\x8c\xde\x50\x26\x30\x7d\x65\x0c\xa0\x09\x6e\x10\x51\x4b\x7d\x01\x7d\x88\x87\xb6\xec\x22\x8d\x72\x96\x51\x5b\xf2\xb7\xb0\x24\xe3\x76\xd9\x49\xd8\xd7\xd8\x25\x86\x3b\xc1\x33\x3b\x29\x73\x5b\x5d\x12\xa0\x85\x10\xaa\x9f\x13\xa8\x8e\xcc\x95\x0e\xa2\x9d\x15\x3d\x6b\xe7\x29\xe9\xed\x2c\xc1\x2f\x9f\x4a\xd9\xe2\xee\x27\x6d\xe8\x97\xb7\xd1\x91\x02\x7f\xb4\x8a\x6e\x7b\x5f\xbc\xf2\x34\x30\x4a\xb6\x4e\x79\x7c\xd0\xfc\xb1\x5d\x46\xff\x64\xf0\xf5\x4f\xd1\x16\xb2\xec\x3b\xd8\x50\x07\xa1\x72\xad\x29\x61\x79\xe0\x71\x9d\x54\xbc\xee\x9d\x99\x18\x5d\x1f\x74\xbf\x16\xb9\xd1\x4d\x54\x82\xb6\xf0\x9f\x3c\x0b\xa1\xca\xe7\xee\xd8\x83\x3d\x84\xaa\xd4\xfe\x45\x69\x18\x42\xf5\x74\xfa\xa5\x1a\x24\xa9\xf0\xf0\xf0\x71\x02\xf1\xab\x43\x5a\x3e\x7c\x8c\x66\xb2\x03\x54\x8a\x42\x88\xe6\x7f\xe8\xf1\x12\x34\x3b\xdf\xcd\x8a\xf2\x5a\xf3\x62\x43\xdd\xcb\xaa\xf1\x5c\x89\xf1\xe1\x99\xe6\x11\xe4\x64\x07\x47\x7a\xc2\x72\xe1\xac\xe9\x6e\x61\x47\xb0\x73\xf6\x15\xc3\x92\x40\x3a\x97\x28\xaf\xaa\xda\x95\x57\x2f\x28\xb9\x3a\x0c\xf9\xb7\x47\xc9\x90\x82\x43\xba\x70\x85\x07\xa0\x0b\x61\x10\x98\xee\x7d\x26\x60\x4b\x4e\x7b\x0b\x94\xad\xb3\x5b\xc0\x3d\x98\xca\x38\xf8\xc8\xa9\x0c\x3e\xad\x06\x16\x13\x39\xff\x68\x03\x47\x00\x86\x56\x55\x51\xde\x6d\x74\x7e\xef\x8a\x51\x36\x0c\xf4\x68\xc4\x0d\x1d\x34\x4e\x5b\x0e\x80\x0c\x39\xb1\xca\x05\x12\x65\x2e\x20\xd3\x7d\x3a\x00\x06\xc0\xbd\x78\x11\x7b\xa8\x1c\x7d\x4f\x69\x03\x1d\xe5\xc1\x86\xba\xdb\xa8\xe1\xa8\xa0\xec\x93\x73\x5f\x49\x06\x36\xa3\x54\xc5\xa5\xdb\xd2\x2d\xec\x34\x57\xe2\x9d\x69\x4a\xf6\x99\x14\x47\x2f\x31\x9a\x50\x55\x03\x13\x71\xa2\xb6\xd1\xe8\x04\x96\x7d\xa2\x53\x09\x15\x79\x3a\x9f\x32\x53\x04\x3e\xa7\x29\xc4\xb4\x11\xb2\x14\x9a\xcb\x69\xf3\x9b\xc0\x77\xbe\xe6\x1f\x75\x77\xf4\x14\xb1\x13\xb9\x27\xc4\x0d\xc9\xa6\x29\x64\x1d\xd6\xe6\xa8\x00\xa2\x2d\xfb\x58\xf4\x4d\x02\x95\x20\x45\xfb\x38\xde\x76\x59\xec\x2c\x06\x99\xc9\x4b\x3f\x91\xf0\x91\x14\x2d\x85\x6d\x38\x54\xae\x41\x20\xc7\x3e\xe4\x6b\xf2\x29\x27\x6a\xdc\x50\xaa\xe1\xc2\x37\x3f\x30\x3e\x58\x7e\x3e\x16\x63\xdd\x17\xa2\xfb\x4b\xa3\x12\x3b\xec\x98\xcb\x65\x11\x51\xc7\x11\x47\xaa\x1b\xee\xde\x6b\x5f\xc0\xe3\x50\xd8\x86\x5e\x34\xcc\xd3\xf3\xc9\xe2\x68\x28\xee\x63\xe5\x29\xc6\xc7\x3a\xb8\x2e\x64\xbe\x0f\x7c\x0d\xba\xc6\x35\xa5\x2e\x3d\xa1\xcc\xe0\x27\x6d\xe3\xfc\x06\xb5\xf4\x5b\x4f\x4a\xae\x3a\x07\x7e\x9e\x0c\x61\x20\xe9\xaa\x91\x07\x6c\xd3\x3d\x49\x32\xb7\x62\x6e\x42\x91\xe7\x55\xbb\xcc\x4a\xa7\x36\xe4\x33\xe5\xea\xdc\xe7\x3b\xc2\x2d\xed\x9c\xdf\x84\x7c\x22\x2d\x67\x5c\x87\x11\x73\xc1\x84\x5c\x77\xe4\x2a\x24\x2a\x30\xae\x27\x59\x03\x49\x66\x01\x3d\x77\xed\x62\xa1\x50\xe5\x94\x6d\xf1\x3a\xbb\xcb\xee\x16\x5e\xfd\x61\x4a\x77\xdf\x1a\x73\xef\x8c\x56\x5d\x01\x9f\x56\x5f\x1d\xdf\x7b\x0a\x63\xf3\x1a\xe7\x79\x74\x5d\x19\x26\x4b\xe6\x66\x7a\x47\x48\x91\xb8\x77\x9e\x0b\xf8\xee\xee\xbb\xc3\x90\x6f\xf4\x96\x2c\x85\x70\xef\xdd\x92\xc6\xcd\x43\x78\x7c\x38\xee\x27\xcd\x9c\x41\x5c\x46\xae\x0a\xc8\x2b\x42\xc3\xd5\xbf\x47\x5b\xda\x6a\xd6\x68\xde\x93\xc1\xee\x81\x94\xb3\x65\x7f\x2b\xdc\x7f\xac\x6b\x72\x2d\x0f\x7b\xdf\x0f\x7b\x82\x7a\xfd\x3b\xd5\x2c\xb8\xd6\x2b\x0a\x63\x0d\x3c\xfd\xb3\xa5\xc0\x61\xaa\x95\x6a\xda\x02\xbe\xbf\xab\x27\x8b\x35\xd5\xce\x77\x05\xfc\xf0\xe6\x8b\x1e\x36\x52\x61\xfa\x22\xd5\x61\xc4\xe3\x06\x3e\x59\x65\xda\x92\x52\xb7\xec\x07\xcb\xe9\x1c\x78\x76\x5c\x75\x7e\xde\xbf\x84\xa5\x94\xb5\xb7\xfb\x2e\x33\x1a\x2c\x2b\xda\xb7\xe3\x92\x94\x41\x4f\x65\xea\x2b\xd9\x88\xf6\xe4\xbc\x94\x6a\x40\xd4\xe6\x3e\xf9\xdb\x3b\xc7\x71\xe4\x9a\x9c\x90\x90\xfe\xc5\x9a\xae\x00\xb9\x40\x3f\x31\x17\xc1\xc5\x61\x67\x2a\x6e\xd2\x80\xe7\x13\xc8\xf9\xae\x35\xd7\x7c\xc2\x6a\x7e\xcb\x7c\xba\xe4\xce\x59\x6e\xd1\xf7\x2c\x25\xe9\xf3\x13\x43\xdd\x33\xaa\xec\x0b\xd8\xe6\x91\xee\xfc\xc3\xc2\x09\x07\x9f\xbd\xe2\x9f\x73\x8e\x10\x4c\x8e\x4d\x63\x7b\x51\x04\x3e\x93\xff\xf1\xc9\x23\x11\x17\xc3\x7c\xc6\xa0\xf3\xd1\x9e\x18\x34\x07\xeb\x45\x11\xf8\x4c\xfe\xc7\x27\x67\xf9\x70\x04\x36\xf4\xeb\x49\x2d\xf8\xe8\x76\x92\xf6\x2b\x69\x78\x93\xb7\x05\xf1\xf2\x62\xc1\x71\x69\x31\xbc\xd5\xbd\x9b\x5c\xc2\x8f\xde\xec\x4e\xaf\xf6\x0e\xdd\xb4\x4b\x5a\x84\x2e\x30\xd5\x83\x56\x4f\x3f\x54\xdd\x80\x2c\xa4\x72\xd3\xfa\xf8\x94\x76\x4a\xbf\xfd\xcb\x05\x79\x5e\x48\x79\x7e\x37\xf7\x52\xae\x30\x53\x9e\xcf\x51\x53\xd4\xe1\xdd\x24\x2e\x47\x47\x36\xd4\x9d\x64\x9e\xb3\x09\xd9\x38\xff\x8f\x15\x3b\xa7\x55\x24\xbc\xa0\xd3\x96\xbc\x5e\x75\x17\x75\x7a\x9e\xd1\x27\x61\xfd\xa3\xab\x65\x2c\x07\xd7\xc6\x8b\xc3\xf9\xf7\xa8\xa7\xdf\xa1\x12\x84\xff\x97\x68\xcc\xe8\x4f\xc5\x63\x76\xe8\xd9\x11\x99\xab\xf7\xec\x98\xcc\x48\x4f\x45\xe5\x37\x9a\x7f\x48\xcf\xff\x06\x00\x00\xff\xff\xa0\xd1\x75\xba\x70\x17\x00\x00"),
		},
		"/tiller-ca-cert-configmap.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "tiller-ca-cert-configmap.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 226,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\x0a\xc2\x30\x0c\x40\xef\xfd\x8a\xfc\x40\x07\x82\xa7\xde\xa4\x78\x53\x2f\x0e\xef\xb1\xcd\xb4\xd8\x66\xa3\x8b\x22\xd4\xfe\xbb\x6c\x4c\xd1\x63\x78\x2f\x2f\x29\x05\x42\x07\xcd\x96\xf1\x1c\xa9\x0d\x31\x52\x6e\x77\x47\xa8\x55\x6b\xad\x70\x08\x27\xca\x63\xe8\xd9\xc0\x63\xa5\x6e\x81\xbd\x01\xdb\x73\x17\x2e\x7b\x1c\x54\x22\x41\x8f\x82\x46\x01\x30\x26\x32\xd0\xc5\xfb\x53\x5f\x29\x26\x2d\x71\xd4\x0e\xb5\x9b\xe5\xe5\xc8\x01\x13\x8d\x03\x3a\x82\x5a\x97\x95\x79\x34\x50\xca\x3f\x2d\x05\x88\xfd\xa4\x7d\xfa\x0e\x1b\x97\xc5\xc0\x4b\x4d\x31\xf6\xc4\x02\x6b\x68\xbe\x1f\xdb\x8d\xa5\x2c\xb6\x67\x99\xc8\x6f\xe1\x1d\x00\x00\xff\xff\x60\xd7\x1c\xac\xe2\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-helm-operator-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-helm-release-crd.yaml.tmpl"].(os.FileInfo),
		fs["/helm-operator-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/tiller-ca-cert-configmap.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
