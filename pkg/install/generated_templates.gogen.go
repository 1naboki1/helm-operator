// Code generated by vfsgen; DO NOT EDIT.

package install

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// templates statically implements the virtual filesystem provided to vfsgen.
var templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/flux-helm-operator-account.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-operator-account.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 948,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x39\x6f\xdc\x30\x10\x85\x7b\xfe\x8a\x01\x5c\x38\x09\x2c\x05\xee\x02\x75\xb6\x8b\x14\x09\x52\x28\x47\x13\xa4\x18\x92\x4f\x59\xc6\x5c\x8e\x30\x24\x37\x87\xb0\xff\x3d\x90\xb4\x06\xbc\x8e\xed\x34\xdb\x8d\xe6\xd2\x9b\xc7\xaf\x69\x1a\x73\x46\x9f\x36\xa0\x0c\xdd\x05\x07\x62\xe7\xa4\xa6\x72\x41\x2e\xd6\x5c\xa0\xa4\x12\x91\x2f\x88\x93\x3f\x4a\x91\x0d\xc9\x87\xf4\x9d\x58\x61\xce\x48\x52\xfc\x4d\x09\xf0\xf0\x34\x88\xd2\xbb\x6a\xa1\x09\x05\x99\x7e\x86\xb2\x59\x46\x1a\xcb\x19\x7e\xfe\x03\x72\x26\x27\xa9\xa8\x44\x7a\xd1\x5f\x5f\xdd\xbc\x6c\x0d\x8f\xe1\x0b\x34\x07\x49\x1d\xed\x2e\xcd\x6d\x48\xbe\xa3\x8f\xab\xaa\xab\x55\x94\xd9\xa2\xb0\xe7\xc2\x9d\x21\x8a\x6c\x11\xf3\x1c\x11\x25\xde\xa2\xa3\x21\xd6\x5f\xcd\x06\x71\xdb\xc8\x08\xe5\x22\x6a\x9e\x2e\x4d\x13\x85\x81\xda\x0f\xbc\x45\x1e\xd9\x81\xf6\xfb\x43\xf7\xf2\xd9\xd1\x34\x1d\x57\xa7\x89\x90\xfc\x7e\x6f\x66\xcf\xee\x8b\x55\xcb\xae\xe5\x5a\x36\xa2\xe1\x0f\x97\x20\xa9\xbd\x7d\x93\xdb\x20\xaf\x77\x97\x16\x85\xef\x6e\xb9\x59\xdd\xeb\x25\xe2\x94\x87\x18\xad\x11\xcb\x78\x43\x3c\x86\xb7\x2a\x75\xcc\x1d\x7d\x3d\x7f\x75\xfe\x6d\xd9\xa9\xc8\x52\xd5\xe1\x28\xb9\x83\xda\x7b\x89\x86\x92\xa4\xfe\xd0\xf8\xb9\x7f\xff\x74\xef\x09\xae\xbf\x5e\xc9\x39\xad\x09\x12\xd1\x63\x98\x17\xdc\x99\xf0\x8c\x36\x43\xf4\xef\x9b\x3c\xb3\x3d\x57\xfb\x03\xae\x1c\x5c\x7e\x14\xcd\xff\x08\x7f\x88\xd6\x43\xf6\x1e\xa3\x2d\xe6\x39\xf2\x18\xb8\xc6\xb2\xe2\x37\x53\xfa\x37\x00\x00\xff\xff\xad\xec\xff\x2b\xb4\x03\x00\x00"),
		},
		"/flux-helm-release-crd.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "flux-helm-release-crd.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 8246,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\xeb\x6f\xdb\xc8\x11\xff\xee\xbf\x62\x9a\x16\xb0\x53\x58\xcc\xab\x28\x5a\x01\x87\xbb\xe0\x82\x6b\xd2\xe4\x2e\x86\x1d\xa7\x1f\x8c\x14\x18\x91\x43\x72\xaa\x7d\xb0\xfb\x90\xad\x16\xfd\xdf\x8b\x5d\x92\x92\x48\x51\x14\xed\xb8\x05\x8a\x74\xbf\xd8\xdc\xc7\xec\x6f\x7e\xf3\xd8\xd9\xd5\x6c\x36\x3b\xc1\x8a\x3f\x93\xb1\xac\xd5\x1c\xb0\x62\xba\x73\xa4\xc2\x97\x4d\x96\x7f\xb0\x09\xeb\x67\xab\x17\x0b\x72\xf8\xe2\x64\xc9\x2a\x9b\xc3\x8f\xde\x3a\x2d\x2f\xc9\x6a\x6f\x52\x7a\x43\x39\x2b\x76\xac\xd5\x89\x24\x87\x19\x3a\x9c\x9f\x00\x28\x94\x34\x87\x92\x84\x34\x24\x08\x2d\xd9\x24\x7c\x24\xb9\xf0\x77\x69\x96\xb0\x3e\xb1\x15\xa5\x61\x66\x61\xb4\xaf\xea\xa9\x3b\xa3\xb5\x04\x1b\x26\x00\xd4\xfb\xbe\x25\x21\x2f\x6b\x61\xb1\x57\xb0\x75\xef\xfb\x23\x1f\xd8\xba\x38\x5a\x09\x6f\x50\x74\x21\xc4\x01\x5b\x6a\xe3\x7e\xd9\x0a\x9f\x41\x69\x4e\x00\x6c\xaa\x2b\x9a\x43\x1c\xa8\x30\xa5\xec\x04\x00\xb3\x2c\x6a\x86\xe2\xc2\xb0\x72\x64\x7e\xd4\xc2\x4b\xb5\x59\xf8\xe7\xab\x8f\xbf\x5c\xa0\x2b\xe7\x90\x58\x87\xce\xdb\xa4\xd9\x29\x48\x89\x73\x5a\x22\x76\x71\x03\xb8\x75\xd8\xca\x3a\xc3\xaa\x38\x26\xea\x2a\x7e\x75\x84\x75\xba\x26\xc9\x4a\xb5\xaa\x35\xb1\x37\xdf\x9f\xfd\x90\x84\x35\xdf\x7d\xf7\xa4\x01\x95\x3d\x79\xfa\x25\x91\x64\x2d\x16\x5d\xd0\x3f\x77\xfa\xc6\x37\x6a\x6d\x9f\xa4\x86\x30\xec\xf4\x89\x25\x59\x87\xb2\xea\x88\x7c\xdd\x13\x97\xa1\x0b\x1d\xd6\x2f\x4c\xe3\x4f\x0d\xb9\x35\xf0\x39\xfc\xf3\x5f\x27\x00\xab\xd6\x3b\x57\x2f\xb6\x5f\x1b\x2b\xd4\x92\xe3\x50\x5c\x49\x66\x45\xd9\x1c\x9c\xf1\xed\x5e\xd6\x69\x83\x05\x6d\xfa\x56\x28\x38\x8b\x28\x6b\x19\xba\x22\xf5\xfa\xe2\xdd\xe7\x57\x57\x69\x49\x12\xe7\xcd\xb2\xca\xe8\x8a\x8c\xe3\x16\x53\x14\xd5\x78\x6d\xdb\x0c\xfd\xdd\xb3\x09\xfb\xdd\x9c\xa6\x25\x1a\x77\xfa\x65\x67\x74\x48\x42\x68\xc1\x29\xdb\x90\xeb\x0c\x00\x64\x64\x53\xc3\x55\x04\x07\x9f\x4a\x8a\xce\xdd\xea\x0c\xae\x64\x0b\x8d\x67\x80\x43\x53\x90\xb3\x09\xbc\xcb\x41\x69\x07\xd6\x57\x95\x60\xca\xce\x81\x1d\xdc\xb2\x10\x90\x51\x8e\x5e\x38\x70\xba\xb7\x0b\xc0\xea\x65\xd2\xeb\xdb\x33\xf0\x8e\x1e\xe8\x1c\x19\x35\x87\x27\x7f\x5d\xdd\xbc\x3c\x7f\xf5\xe5\x37\x4f\x3a\x33\x76\xdc\x7e\x9a\x3e\xad\x0a\xc1\x76\x23\xf8\x17\x04\x05\x29\x32\xe8\x28\x83\xc5\x1a\x30\xcf\xf9\x8e\x55\x01\xae\xa4\x3d\x8d\x54\x1b\xba\xe0\x74\x98\x00\xad\x4b\xd5\xbb\x3c\x48\xdb\x1b\x9c\xfd\xe3\xf9\xec\x8f\x5f\xce\x6e\x66\xcd\x7f\xbf\x6d\xbb\x9e\x7e\xdf\x23\x41\xe2\xdd\x5b\x0e\xae\xb6\x3e\xca\x81\xc4\x3b\x96\x5e\x82\xf2\x72\x41\x06\x74\xbe\x21\xc4\xd0\x8a\xa3\x77\x07\x25\x96\x44\xd5\x79\x6b\xc4\xd8\xf3\xe2\xf9\xa0\x1a\x21\x39\x15\x64\x7a\x63\xb9\x36\x12\x5d\x1c\x7d\xf5\xb2\x33\x56\x7b\xce\x26\xd7\xdd\xdf\x66\x71\xd9\x80\xe1\x02\xed\x5b\x3b\xb4\x36\x0c\xbd\x76\x9b\x12\xb7\x0d\xed\xbe\xa1\x6a\xd1\xff\x71\x6b\x39\x96\xa4\xbd\x1b\x55\x3d\xaa\xcd\xca\x3a\x14\x02\xb4\x01\x5f\x15\x06\x33\x6a\xd7\x02\x2b\xb0\x14\x72\xab\x7d\x98\x55\x7e\xff\xbb\x5e\x14\x59\x72\x9f\x51\xf8\x7e\xba\xe8\xc1\x7a\x97\x6f\x18\xaf\x29\x8e\x0b\x43\x56\xf3\x64\x41\xab\x98\x5e\x5a\xb0\x83\xc8\x16\x5a\x0b\x42\xd5\x19\xbb\x45\x1e\x67\xe3\x2f\xc8\x2e\xa0\x07\x54\x5b\x26\x34\xa4\x5a\x56\x82\x1c\xc1\x82\x72\x6d\x82\x6f\x9b\x65\x08\xd1\xd6\x5d\xd0\x82\xf5\x69\x4a\xd6\xe6\x5e\x4c\x46\x93\x6b\x93\xd2\x75\xbd\xcb\xfd\xc8\x88\x2b\x6b\xd3\x6d\x50\x96\x46\xfb\xa2\x84\x8c\x02\xd0\x67\x86\xe2\x21\x35\x9d\x1a\xa3\x85\x58\x60\xba\xec\x03\xa9\x57\xe8\xc5\xdf\x28\x75\x7d\xaf\x3c\x90\xf9\x43\x23\x85\x0b\xb1\xa7\xd5\xa0\x66\xe4\xce\x6b\xad\x2a\x32\xc1\x71\x36\x50\x6c\xb4\x44\xe7\x38\xd0\x5b\xb3\xe4\xc8\xc2\x1b\xea\xbb\xe5\xb8\x96\x1b\xda\xef\x87\xac\xe6\x7b\x13\xc2\xbe\x0a\x67\xfa\x21\xca\x81\x73\x50\x44\x59\x2c\xaf\xee\x07\xad\x15\x31\x84\x6e\x7c\x65\xc6\x36\x10\xfe\x56\xeb\xe5\x80\x35\x46\x59\x37\xb4\x22\xe5\xa0\x0c\x4b\x21\x37\x5a\x82\xf1\x4a\x05\xf7\xce\xbc\x89\x5e\xde\xd8\xe3\xde\xa0\x0e\xe4\x9f\x3d\x3c\xa1\x8e\xda\x49\x34\x21\xe2\x6e\xb7\x81\xb8\x06\x56\x19\xaf\x38\xf3\x28\xe0\xbd\x5f\x90\x51\xe4\x42\x12\xa8\xc2\xa1\xc9\x5a\x9d\x0f\xc8\x87\xce\x91\xf2\xea\xf9\xf3\x03\x59\x0c\x8e\x64\x32\x18\xcd\x66\x70\x20\xa7\x8c\x33\x1e\x75\xf3\xca\xb1\x88\x27\x83\x64\xd5\x3b\x28\x2f\x74\x66\xc3\x5f\x84\x37\x54\x09\xbd\x96\xa4\xfa\xb1\x57\x37\x34\x91\x37\x04\x43\x98\xad\x63\x41\xb9\x97\xa3\xea\xc3\xe7\x78\x9e\x82\x51\x73\xc6\xc4\xfb\x13\x0b\xba\x0a\x2e\xea\xc6\x93\xf7\x1b\xaa\x0c\xa5\xa1\xa0\xf9\x15\x5c\x5b\x6a\xb2\xf6\x4f\x46\xcb\xc4\xc6\xe5\xef\x69\x7d\x49\x79\x3c\x76\x08\xfb\x61\x52\x83\x40\x63\x70\xdd\x1b\x61\x47\x72\xc0\xbb\x47\x52\x54\xb7\x78\x0d\x47\x6f\xa7\x76\xad\xdb\x58\x1e\x6b\x8a\xfa\x03\x1e\xb6\xa3\x73\x28\x34\x82\xcd\x62\x1d\x10\x95\x3c\x07\xe9\xad\x0b\xb5\x01\xab\x4d\x79\xb0\x53\x39\x34\x85\x41\xff\xca\x37\xac\xdd\x40\x59\xb0\x65\x75\x38\x67\x3f\x16\x83\xe3\xf4\xa4\x5a\xe5\x5c\xfc\x8c\x55\x6d\xd3\x61\xa6\x46\xe5\xc3\x34\x2b\x1d\x87\x02\xa3\xd6\x82\x31\x8b\xd5\x5a\x48\xac\x1e\xc9\x68\x30\x5e\xcf\xb5\x6d\x49\x7b\x75\xf4\x01\xb0\xef\x69\xdd\x22\xda\x60\x0d\x99\xad\x20\x17\x3b\x9b\xc2\x28\xa4\xef\x6e\x35\x5d\x0f\x24\x6b\x94\x43\x01\x3f\x19\xa9\xae\xea\x47\x82\x89\x70\xdb\x7c\xb7\xcd\x36\x60\xc8\x19\xa6\x15\x8a\x96\xf3\x16\x32\x0b\x02\xb6\xa0\x34\x08\xad\x0a\x32\x20\x51\x65\x18\xee\x18\x47\x00\x1f\x3a\x76\xea\xa6\x0e\x55\xfe\x07\x20\x7f\xea\x94\xf5\xac\xe0\xb6\xe4\xb4\xec\x31\x4e\x77\x6c\xdd\xd0\x19\x32\x89\xc8\xdd\xe4\xf7\x3f\x1a\x28\x8f\x9a\xda\x26\x50\x06\x0f\x8d\x92\x1a\xe8\xff\x43\xe4\xbf\x14\x22\x0d\xdd\x5f\x17\x1f\x74\x17\x6e\xb9\x28\xae\x62\x99\xfd\x38\x41\xe2\x8d\x78\x70\x8c\x78\x33\xd5\x98\xd7\x97\x1f\xba\x36\xfb\xc6\xbc\x29\x3e\x0b\x86\xf2\xf0\x71\x8c\x56\xa1\x2b\x1f\x6c\xb5\xb0\x78\x22\x6b\x61\x2a\xdc\xb2\x2b\x9b\xa4\x11\x1f\x15\xa2\x2e\x70\x16\x6f\x42\x05\x3b\x30\x54\xe9\xa7\x70\x5b\x92\xe9\x18\x37\x50\x28\x74\xac\x72\xbf\x15\x3b\x6b\x45\x1f\x07\xcc\x3b\xeb\xbe\x10\x77\x0b\xc2\x01\x33\x76\xe7\xef\x1e\x8a\x47\x27\xef\x65\x88\xa3\x2b\x76\x3d\xb3\x37\x79\x75\xfc\x19\x2a\xd5\xca\x85\xcb\xb1\xce\x47\xe2\xfa\xa0\x6b\xc7\xbd\xfb\xf2\x07\x49\xec\x62\x2e\xd8\x9d\x9e\xc3\xa1\x28\x18\x8f\x80\x62\xf8\x36\xda\xd3\xeb\x4f\xec\x62\xce\xa2\xa4\x48\xc2\x92\x1f\x0a\x76\xa5\x5f\x24\xa9\x96\x73\x6d\x8a\x67\xc1\xe7\xef\x77\x1b\x69\x5b\x7b\x59\x0e\x91\xf3\xeb\xf8\x72\x9a\x51\xce\xaa\x7e\xdb\xfe\xf8\xfa\x6a\x60\xd1\xe1\x80\xed\x60\xbe\x08\xc1\xca\xca\x72\x56\xbf\xb6\xb6\xb1\x69\x39\xb8\x74\x13\xa0\x6d\xd9\xd1\x44\x31\x0f\x9f\x45\x47\xb4\x30\x87\x92\xd8\x1e\x87\x0b\x83\x2a\x2d\xbb\xe5\x84\x44\xeb\x06\xdf\x11\x8e\xd7\x87\x4b\xae\xde\x50\x75\x1d\x9f\x97\x26\x20\x68\x93\x41\xa6\xc9\x46\xaa\x8d\x57\x70\x9a\x51\x75\xda\x3e\x51\x9d\xa1\xb5\x5e\x52\xeb\x5d\x92\x94\xdb\x66\x2f\x14\xf5\xb3\x41\xee\x45\xce\x42\x50\xf6\x74\x04\xf4\x70\x4e\xe8\xfa\xed\xd6\x1a\xc1\x7d\x63\x79\x7a\x0e\xa7\xcd\xef\x3a\xf7\xf6\xe4\xad\xb4\x09\x54\x34\xaf\xf7\x1b\x6f\xb8\xbe\xfc\xf0\x75\xfe\xeb\x8d\x98\xea\xbf\x13\x5f\x08\x76\xdc\x52\x0d\xfd\x50\x30\x01\xde\x6a\xf8\xf7\xb4\xf1\xcd\x9a\x45\x5f\x47\x87\x25\xb9\x22\x33\x95\x91\xb8\xf1\x85\x17\xa2\x7e\x2d\x1a\xc6\xfb\xa8\x77\x94\xbe\xfd\x17\x68\x39\x05\xf4\xae\x84\xb3\x00\x99\x65\x25\xa2\xfb\x1f\xf2\xf2\x3d\x36\xfe\x1d\x00\x00\xff\xff\x98\xa1\x83\x87\x36\x20\x00\x00"),
		},
		"/helm-operator-deployment.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "helm-operator-deployment.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 6207,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xcd\x8f\xdb\xb8\x15\xbf\xcf\x5f\xf1\x30\x73\xc8\x65\x24\x39\xd8\xec\xa2\x50\x90\x43\xba\xe9\x66\x02\x24\xe9\xa0\x13\x14\xe8\x69\x97\xa6\x9e\x2d\xd6\x14\xa9\x92\x4f\x76\x55\x63\xfb\xb7\x17\x8f\x94\xf5\x61\xd9\x1e\x4f\x7a\x68\x7d\x19\x0d\xc9\xf7\xfd\x7b\x1f\x64\x92\x24\x37\xa2\x56\x7f\x45\xe7\x95\x35\x39\x88\xba\xf6\xd9\xf6\xf5\xcd\x46\x99\x22\x87\x0f\x58\x6b\xdb\x56\x68\xe8\xa6\x42\x12\x85\x20\x91\xdf\x00\x18\x51\x61\x0e\x2b\xdd\xfc\x33\x29\x51\x57\x89\xad\xd1\x09\xb2\x6e\xbf\x07\xb5\x82\xf4\xab\xa8\xd0\xd7\x42\x22\xfc\xfe\x7b\x77\x3a\xfc\x9b\xc3\x7e\x3f\xdd\xdd\xef\x01\x4d\xc1\xc7\x7c\x8d\x92\x59\x3b\xac\xb5\x92\xc2\xe7\xf0\xfa\x06\xc0\xa3\x46\x49\xd6\xf1\x0e\x40\x25\x48\x96\x9f\xc5\x12\xb5\x8f\x0b\xe7\x35\x61\x5a\x72\x82\x70\xdd\xc6\xa3\xd4\xd6\x98\xc3\x5f\x50\x3a\x14\x84\x37\x00\x84\x55\xad\x05\x61\xc7\x7a\x64\x1d\xff\xf4\x44\xca\x45\x39\xfc\x13\xc6\x58\x12\xa4\xac\x19\xd1\xd4\xce\x56\x48\x25\x36\x3e\x55\x36\xf3\xd2\x09\x56\xe1\x96\x5c\x83\xb7\xe1\xd0\xc1\xe6\xf0\x8d\x6e\xab\x24\xbe\x97\xd2\x36\x86\xbe\x5e\x16\xb7\xb5\xba\xa9\xd0\xe7\x9d\xbf\xff\x64\xc4\x52\xe3\x37\xa5\x35\xba\x6f\x9f\x9f\xa2\xd7\xe3\x2f\xe9\x34\x0f\x5c\x48\xfb\x44\x8a\x7e\x0f\x40\x5a\xb3\x52\xeb\x2f\xa2\xce\x47\x8b\x73\x63\x23\x5d\x12\x4f\x4f\x4e\x16\xb8\x12\x8d\xa6\x2f\xb6\xc0\x1c\x16\x3f\x2d\x16\x17\x04\xa3\x23\x3f\x22\xf6\x1c\x0a\x9a\x0a\x8e\x6b\xd1\xf8\xce\xb6\xde\xaa\x9f\xd1\xd1\x53\xbf\x1f\xb1\x73\x79\x17\xb5\xe7\xaf\x23\x3b\xd0\xd1\x80\xba\xf3\xb6\xbc\x59\x2c\x06\x16\xdd\xb9\xbb\xc3\x5f\xf8\x9b\x6d\x60\xa7\xb4\x06\x83\x58\x00\x95\xe8\x11\x68\x67\x0f\x81\x61\xcd\x5b\x3e\x22\x0c\x01\x59\x40\x4f\x62\xa9\x95\x2f\x61\x2b\xb4\x2a\x04\x61\x01\xdf\x3e\x3f\xf5\xec\xa4\x35\x06\x65\x80\x0f\x88\xb5\x50\xc6\x13\x44\xd3\x66\x92\xcf\x07\xf4\xee\x54\x40\xef\xae\x0e\xe8\xdd\xc5\x80\xde\x41\xf4\x6e\xc8\x23\xd8\x34\x4b\x74\x06\x09\x03\xb2\x49\xfb\x99\x7a\x73\xa7\x8f\xc4\x4c\x43\x7f\xf7\xbf\x0c\xfd\x29\xab\xdf\x0c\x56\xef\xf7\x68\x8a\xd1\xe1\x6f\x25\xc2\xca\x6a\x6d\x77\xca\xac\xbb\x68\x83\xf2\xb0\xb2\x0e\x1a\xcf\x6b\x02\x64\xe3\xc9\x56\xca\x63\x01\x1b\x63\x77\xe6\xd7\xd2\x7a\xf2\xb0\x52\x1a\xef\x7b\x46\xbb\x52\xc9\x32\x62\x64\x80\x91\x85\xc2\x1e\xa0\xc3\x44\xfc\xe1\xc0\xee\x0c\xac\x15\x71\x65\xb4\xe0\x04\x95\x03\x2a\x80\x4a\x61\x3a\xc1\x6b\x45\x65\xb3\x04\xeb\x18\x8e\xa0\xd5\x06\x53\x86\xe9\x2b\xad\x41\x68\x6f\x7b\x11\x15\xd7\x17\x50\x43\x3c\x94\x21\x1b\x68\xa4\x35\x24\x94\x41\x77\x0f\x4b\xd4\x76\x97\x9e\x84\x7d\x25\xda\xc8\x70\xc7\x78\x26\xcb\x65\x6e\xab\x0a\x04\x61\xc0\xfb\xf2\xd7\x08\xaa\x23\x73\xb9\x83\x28\x6b\x58\xcf\xca\x3a\x8c\x7a\x5b\x83\xf0\xdb\xa7\x82\xb7\xa8\xfd\x45\x69\xfc\xed\x6d\x70\x24\xc3\x5f\x18\x89\xf7\x9d\x2f\x5e\x39\xec\x19\x45\x5b\xa7\x3c\x3e\x2a\x7a\x68\x96\xc1\x3f\x29\x7c\xfd\x63\xb0\x05\x0d\xb9\x16\x36\xd8\x82\x2f\x6d\xa3\x0b\x58\x0e\x3c\x6e\xa3\x8a\xb7\x9d\x33\x23\xa3\xdb\x41\xf7\x5b\x96\x1b\xdc\x84\x05\x28\x03\xff\xce\x52\xef\xcb\x6c\xee\x8e\x03\xd8\xbd\x2f\x0b\xe5\x5e\x94\x86\xde\x97\xcf\xa7\x5f\xac\x41\x9c\x0a\x4f\x4f\x0f\x13\x88\xdf\x0c\x69\xf9\xf4\x10\xcc\x24\x0b\x42\x4a\xf4\x3e\x98\xff\xb1\xc3\x8b\x57\x64\x5d\x3b\x2b\xca\x6b\x45\xc9\x06\xdb\x97\x55\xe3\xb9\x12\xe3\xc3\x33\xcd\x03\xc8\xd1\xf4\x8e\x74\x28\x8a\xc4\x1a\xdd\xde\xc3\x0e\x61\x67\xcd\x2b\x82\x25\x02\x77\x2e\x56\x5e\x96\x95\x2d\x6e\x5e\x50\x72\x95\xef\xf3\xef\x80\x92\x3e\x05\xfb\x74\xa1\x52\x0c\x40\x67\x42\xcf\x30\x3d\xf8\x8c\xc1\x16\x9d\xf6\x16\x30\x5d\xa7\xf7\x20\x0e\x60\x2a\xc2\xe0\xc3\xa7\x52\xf8\xb4\xea\x59\x4c\xe4\xfc\xbd\xf1\x14\x00\xe8\x1b\x59\x06\x79\xf7\xc1\xf9\x9d\x2b\x46\xd9\xd0\xd3\x0b\xcd\x6e\x68\xa1\xb6\xca\x90\x07\x41\x90\x21\xc9\x8c\x21\x51\x64\x0c\x32\xd5\xa5\x03\x08\x0f\xe2\x20\x9e\xc5\x0e\x95\xa3\xeb\x29\x8d\xc7\xa3\x3c\xd8\x60\x7b\x1f\x34\x1c\x15\x94\x43\x72\x1e\x2a\x49\xcf\x66\x94\xaa\x62\x69\xb7\x78\x0f\x3b\x45\x25\x7b\x67\x9a\x92\x5d\x26\x85\xd1\x8b\x8d\x46\x21\xcb\x9e\x09\x3b\x51\x99\x60\x74\x04\xcb\x21\xd1\xb1\x80\x12\x1d\x9e\x4f\x99\x29\x02\xaf\x69\x0a\x21\x6d\x98\x2c\x86\xe6\x72\xda\x7c\x17\xf8\xce\xd7\xfc\xa3\xee\x2e\x1c\x06\xec\x04\xee\x11\x71\x7d\xb2\x29\xf4\x69\x2b\x2a\x7d\x54\x00\x85\x29\xba\x58\x74\x4d\x42\x48\x46\x8a\x72\x61\xbc\x6d\xd3\xd0\x59\xb4\x20\x42\xc7\xfd\x84\xc3\x87\x5c\xb4\xa4\x68\xfc\x50\xb9\x7a\x81\x14\xfa\x90\xab\xd0\xc5\x9c\xa8\xc4\x06\x63\x0d\x67\xbe\xd9\xc0\x78\xb0\xfc\x7c\x2c\xc6\xba\x27\xac\xfb\x4b\xa3\x12\x3a\xec\x98\xcb\x65\x11\x41\xc7\x11\x47\xac\x6a\x6a\x3f\x28\x97\xc3\xbe\x2f\x6c\x7d\x2f\xea\xe7\xe9\xf9\x64\x71\x34\x14\x77\xb1\x72\x18\xe2\x63\x2c\xdc\xe6\x3c\xdf\x7b\xba\x05\x55\x89\x35\xc6\x2e\x3d\xa1\x4c\xe1\x17\x65\xc2\xfc\x06\x15\xf7\x5b\x87\x92\xaf\x3a\x03\x3f\x87\x1a\x85\x47\xee\xaa\x81\x07\x6c\xe3\x3d\x89\x33\xb7\x24\xaa\x7d\x9e\x65\x65\xb3\x4c\x0b\x2b\x37\xe8\x52\x69\xab\xcc\x65\x3b\x14\x5b\xdc\x59\xb7\xf1\xd9\x44\x5a\x46\x62\xed\x47\xcc\x19\x13\x7c\xdd\xe1\xab\x10\xab\x40\x62\x3d\xc9\x1a\x88\x32\x73\xe8\xb8\x2b\x1b\x0a\x85\x2c\xa6\x6c\xf3\xd7\xe9\x22\x5d\x24\x4e\xfe\x61\x4a\xf7\xd8\x68\xfd\x68\xb5\x92\x6d\x0e\x9f\x56\x5f\x2d\x3d\x3a\xf4\x63\xf3\x6a\xeb\x68\x74\x5d\xe9\x27\x4b\xa2\x7a\x7a\x47\x88\x91\x78\xb4\x8e\x72\xf8\x61\xf1\xc3\x30\xe4\x6b\xb5\x45\x83\xde\x3f\x3a\xbb\xc4\x71\xf3\x60\x1e\x1f\x8f\xfb\x49\x3d\x67\x10\x96\x05\x95\x39\x64\x25\x0a\x4d\xe5\xbf\x46\x5b\xca\x28\x52\x42\x7f\x40\x2d\xda\x27\x94\xd6\x14\xdd\xad\xf0\xf0\x23\x55\xa1\x6d\xa8\xdf\xfb\xb1\xdf\x63\xd4\xab\xff\x53\xcd\xbc\x6d\x9c\x44\x3f\xd6\xc0\xe1\x3f\x1a\xf4\xe4\xa7\x5a\xc9\xba\xc9\xe1\xc7\x45\x35\x59\xac\xb0\xb2\xae\xcd\xe1\xa7\x37\x5f\x54\xbf\x11\x0b\xd3\x17\xae\x0e\x23\x1e\x77\xf0\xc9\x48\xdd\x14\x18\xbb\x65\x37\x58\x4e\xe7\xc0\xb3\xe3\xaa\x75\xf3\xfe\xc5\x2c\xb9\xac\xbd\x3d\x74\x99\xd1\x60\x59\xe2\xa1\x1d\x17\x28\xb5\x70\x58\xc4\xbe\x92\x8e\x68\x4f\xce\x4b\xb1\x06\x04\x6d\x1e\xa3\xbf\x9d\xb5\x14\x46\xae\xc9\x09\x0e\xe9\x9f\x8d\x6e\x73\xe0\x0b\xf4\x33\x73\x11\x5c\x1c\x76\xa6\xe2\x26\x0d\x78\x3e\x81\x9c\xef\x5a\x73\xcd\x27\xac\xe6\xb7\xcc\xe7\x4b\xee\x9c\xe5\x56\xb8\x8e\x25\x27\x7d\x76\x62\xa8\xbb\xa2\xca\xbe\x80\x6d\x16\xe8\xce\x3f\x2c\x9c\x70\xf0\xd9\x2b\xfe\x39\xe7\x30\xc1\xe4\xd8\x34\xb6\x17\x45\x88\x2b\xf9\x1f\x9f\x3c\x12\x71\x31\xcc\x67\x0c\x3a\x1f\xed\x89\x41\x73\xb0\x5e\x14\x21\xae\xe4\x7f\x7c\x72\x96\x0f\x47\x60\x13\x6e\x3d\xa9\x05\x0f\x76\xc7\x69\xbf\xe2\x86\x37\x79\x5b\x60\x2f\x27\x09\x85\xa5\xa4\x7f\xab\x7b\x37\xb9\x84\x1f\xbd\xd9\x9d\x5e\xed\x1c\xba\x69\x96\x98\xf8\xd6\x13\x56\xbd\x56\xcf\x3f\x54\xdd\x01\x2f\xc4\x72\xd3\xb8\xf0\x94\x76\x4a\xbf\xc3\xcb\x05\x3a\x4a\xb8\x3c\xbf\x9b\x7b\x29\x93\x22\x95\x8e\xce\x51\x63\xd0\xe1\xdd\x24\x2e\x47\x47\x36\xd8\x9e\x64\x9e\x91\xf6\xe9\x38\xff\x8f\x15\x3b\xa7\x55\x20\xbc\xa0\xd3\x16\x9d\x5a\xb5\x17\x75\xba\xce\xe8\x93\xb0\xfe\xd9\x56\x3c\x96\x83\x6d\xc2\xc5\xe1\xfc\x7b\xd4\xf3\xef\x50\x11\xc2\xff\x4d\x34\x66\xf4\xa7\xe2\x31\x3b\x74\x75\x44\xe6\xea\x5d\x1d\x93\x19\xe9\xa9\xa8\x7c\xa7\xf9\x43\x7a\x76\x99\xf0\x80\xba\xea\xde\xdc\xfd\xf4\xbd\x36\xe9\x3c\x52\xc4\x21\xb7\x1b\x38\x3d\xe7\xe3\x8c\x6a\xc6\xf6\x7d\x51\x28\x0e\x9f\xd0\xef\xdd\xda\x4f\x61\x30\xec\x71\x6d\x68\x18\x12\x7e\xbf\x07\x27\xcc\x1a\x2f\x51\x26\xe1\xf2\x3f\x79\xac\x1f\xbe\xfe\x13\x00\x00\xff\xff\x58\x77\x69\xdd\x3f\x18\x00\x00"),
		},
		"/tiller-ca-cert-configmap.yaml.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "tiller-ca-cert-configmap.yaml.tmpl",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 226,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\x0a\xc2\x30\x0c\x40\xef\xfd\x8a\xfc\x40\x07\x82\xa7\xde\xa4\x78\x53\x2f\x0e\xef\xb1\xcd\xb4\xd8\x66\xa3\x8b\x22\xd4\xfe\xbb\x6c\x4c\xd1\x63\x78\x2f\x2f\x29\x05\x42\x07\xcd\x96\xf1\x1c\xa9\x0d\x31\x52\x6e\x77\x47\xa8\x55\x6b\xad\x70\x08\x27\xca\x63\xe8\xd9\xc0\x63\xa5\x6e\x81\xbd\x01\xdb\x73\x17\x2e\x7b\x1c\x54\x22\x41\x8f\x82\x46\x01\x30\x26\x32\xd0\xc5\xfb\x53\x5f\x29\x26\x2d\x71\xd4\x0e\xb5\x9b\xe5\xe5\xc8\x01\x13\x8d\x03\x3a\x82\x5a\x97\x95\x79\x34\x50\xca\x3f\x2d\x05\x88\xfd\xa4\x7d\xfa\x0e\x1b\x97\xc5\xc0\x4b\x4d\x31\xf6\xc4\x02\x6b\x68\xbe\x1f\xdb\x8d\xa5\x2c\xb6\x67\x99\xc8\x6f\xe1\x1d\x00\x00\xff\xff\x60\xd7\x1c\xac\xe2\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/flux-helm-operator-account.yaml.tmpl"].(os.FileInfo),
		fs["/flux-helm-release-crd.yaml.tmpl"].(os.FileInfo),
		fs["/helm-operator-deployment.yaml.tmpl"].(os.FileInfo),
		fs["/tiller-ca-cert-configmap.yaml.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
